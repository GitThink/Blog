<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>VSCode初次写vue项目并一键生成.vue模版</title>
      <link href="/categories/tool/83dcefb7.html"/>
      <url>/categories/tool/83dcefb7.html</url>
      
        <content type="html"><![CDATA[<h2 id="安装vscode"><a href="#安装vscode" class="headerlink" title="安装vscode"></a>安装vscode</h2><p>官网地址：<a href="https://code.visualstudio.com/" target="_blank" rel="noopener">https://code.visualstudio.com/</a></p><h2 id="安装插件，识别vue文件"><a href="#安装插件，识别vue文件" class="headerlink" title="安装插件，识别vue文件"></a>安装插件，识别vue文件</h2><p>插件库中搜索<code>Vetur</code>，点击安装，安装完成之后点击重新加载。</p><h2 id="新建代码片段"><a href="#新建代码片段" class="headerlink" title="新建代码片段"></a>新建代码片段</h2><p>文件–&gt;首选项–&gt;用户代码片段<br>然后再弹出的输入框中输入<code>vue</code>，然后回车(Enter)。<br>在<code>vue.json</code>中写上代码片段,代码如下：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"Print to console"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"prefix"</span><span class="token operator">:</span> <span class="token string">"vue"</span><span class="token punctuation">,</span>        <span class="token property">"body"</span><span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token string">"&lt;!-- $1 -->"</span><span class="token punctuation">,</span>            <span class="token string">"&lt;template>"</span><span class="token punctuation">,</span>            <span class="token string">"   &lt;div class=\"$2\">$5&lt;/div>"</span><span class="token punctuation">,</span>            <span class="token string">"&lt;/template>"</span><span class="token punctuation">,</span>            <span class="token string">""</span><span class="token punctuation">,</span>            <span class="token string">"&lt;script>"</span><span class="token punctuation">,</span>            <span class="token string">"//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）"</span><span class="token punctuation">,</span>            <span class="token string">"//例如：import 《组件名称》 from '《组件路径》';"</span><span class="token punctuation">,</span>            <span class="token string">""</span><span class="token punctuation">,</span>            <span class="token string">"export default {"</span><span class="token punctuation">,</span>            <span class="token string">"   //import引入的组件需要注入到对象中才能使用"</span><span class="token punctuation">,</span>            <span class="token string">"   components: {"</span><span class="token punctuation">,</span>            <span class="token string">"       "</span><span class="token punctuation">,</span>            <span class="token string">"   },"</span><span class="token punctuation">,</span>            <span class="token string">"   data() {"</span><span class="token punctuation">,</span>            <span class="token string">"       //这里存放数据"</span><span class="token punctuation">,</span>            <span class="token string">"       return {"</span><span class="token punctuation">,</span>            <span class="token string">"           "</span><span class="token punctuation">,</span>            <span class="token string">"       };"</span><span class="token punctuation">,</span>            <span class="token string">"   },"</span><span class="token punctuation">,</span>            <span class="token string">"   //监听属性 类似于data概念"</span><span class="token punctuation">,</span>            <span class="token string">"   computed: {"</span><span class="token punctuation">,</span>            <span class="token string">"       "</span><span class="token punctuation">,</span>            <span class="token string">"   },"</span><span class="token punctuation">,</span>            <span class="token string">"   //监控data中的数据变化"</span><span class="token punctuation">,</span>            <span class="token string">"   watch: {"</span><span class="token punctuation">,</span>            <span class="token string">"       "</span><span class="token punctuation">,</span>            <span class="token string">"   },"</span><span class="token punctuation">,</span>            <span class="token string">"   //方法集合"</span><span class="token punctuation">,</span>            <span class="token string">"   methods: {"</span><span class="token punctuation">,</span>            <span class="token string">"       "</span><span class="token punctuation">,</span>            <span class="token string">"   },"</span><span class="token punctuation">,</span>            <span class="token string">"   //生命周期 - 创建完成（可以访问当前this实例）"</span><span class="token punctuation">,</span>            <span class="token string">"   created() {"</span><span class="token punctuation">,</span>            <span class="token string">"       "</span><span class="token punctuation">,</span>            <span class="token string">"   },"</span><span class="token punctuation">,</span>            <span class="token string">"   //生命周期 - 挂载完成（可以访问DOM元素）"</span><span class="token punctuation">,</span>            <span class="token string">"   mounted() {"</span><span class="token punctuation">,</span>            <span class="token string">"       "</span><span class="token punctuation">,</span>            <span class="token string">"   },"</span><span class="token punctuation">,</span>            <span class="token string">"   //生命周期 - 创建之前"</span><span class="token punctuation">,</span>            <span class="token string">"   beforeCreate() {"</span><span class="token punctuation">,</span>            <span class="token string">"       "</span><span class="token punctuation">,</span>            <span class="token string">"   },"</span><span class="token punctuation">,</span>            <span class="token string">"   //生命周期 - 挂载之前"</span><span class="token punctuation">,</span>            <span class="token string">"   beforeMount() {"</span><span class="token punctuation">,</span>            <span class="token string">"       "</span><span class="token punctuation">,</span>            <span class="token string">"   },"</span><span class="token punctuation">,</span>            <span class="token string">"   //生命周期 - 更新之前"</span><span class="token punctuation">,</span>            <span class="token string">"   beforeUpdate() {"</span><span class="token punctuation">,</span>            <span class="token string">"       "</span><span class="token punctuation">,</span>            <span class="token string">"   },"</span><span class="token punctuation">,</span>            <span class="token string">"   //生命周期 - 更新之后"</span><span class="token punctuation">,</span>            <span class="token string">"   updated() {"</span><span class="token punctuation">,</span>            <span class="token string">"       "</span><span class="token punctuation">,</span>            <span class="token string">"   },"</span><span class="token punctuation">,</span>            <span class="token string">"   //生命周期 - 销毁之前"</span><span class="token punctuation">,</span>            <span class="token string">"   beforeDestroy() {"</span><span class="token punctuation">,</span>            <span class="token string">"       "</span><span class="token punctuation">,</span>            <span class="token string">"   },"</span><span class="token punctuation">,</span>            <span class="token string">"   //生命周期 - 销毁完成"</span><span class="token punctuation">,</span>            <span class="token string">"   destroyed() {"</span><span class="token punctuation">,</span>            <span class="token string">"       "</span><span class="token punctuation">,</span>            <span class="token string">"   },"</span><span class="token punctuation">,</span>            <span class="token string">"   //如果页面有keep-alive缓存功能，这个函数会触发"</span><span class="token punctuation">,</span>            <span class="token string">"   activated() {"</span><span class="token punctuation">,</span>            <span class="token string">"       "</span><span class="token punctuation">,</span>            <span class="token string">"   },"</span><span class="token punctuation">,</span>            <span class="token string">"}"</span><span class="token punctuation">,</span>            <span class="token string">"&lt;/script>"</span><span class="token punctuation">,</span>            <span class="token string">""</span><span class="token punctuation">,</span>            <span class="token string">"&lt;style lang='scss' scoped>"</span><span class="token punctuation">,</span>            <span class="token string">"//@import url($3); 引入公共css类"</span><span class="token punctuation">,</span>            <span class="token string">"$4"</span><span class="token punctuation">,</span>            <span class="token string">"&lt;/style>"</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Log output to console"</span>    <span class="token punctuation">}</span> <span class="token punctuation">}</span></code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>上面代码中的 <code>&quot;prefix&quot;: &quot;vue&quot;</code>, 就是快捷键；保存好之后，新建.vue结尾的文件，输入 <code>vue</code> 按键盘的 <code>tab</code> 就行。</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VSCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序中使用阿里图标库iconfont</title>
      <link href="/categories/frontend/84b12bae.html"/>
      <url>/categories/frontend/84b12bae.html</url>
      
        <content type="html"><![CDATA[<h2 id="第一步：下载需要的字体图标"><a href="#第一步：下载需要的字体图标" class="headerlink" title="第一步：下载需要的字体图标"></a>第一步：下载需要的字体图标</h2><p>进入阿里图标官网<a href="http://iconfont.cn/" target="_blank" rel="noopener">http://iconfont.cn/</a>搜索自己想要的图标，点击下载至本地<br><img src="/files/images/2020081201.png" alt=""><br>将得到名为download.zip的压缩包，解压将看到以下内容：<br><img src="/files/images/2020081202.png" alt=""></p><h2 id="第二步：转换ttf文件"><a href="#第二步：转换ttf文件" class="headerlink" title="第二步：转换ttf文件"></a>第二步：转换ttf文件</h2><p>进入<a href="https://transfonter.org/" target="_blank" rel="noopener">https://transfonter.org/</a>平台，将解压出来的ttf字体文件转化成base64格式。流程如下：<br><img src="/files/images/2020081203.png" alt=""><br><img src="/files/images/2020081204.png" alt=""><br>点击下载，得到转换后的压缩包，名为transfonter.org-开头。解压可以得到如下图的几个文件：<br><img src="/files/images/2020081205.png" alt=""></p><h2 id="第三步：在微信小程序中使用"><a href="#第三步：在微信小程序中使用" class="headerlink" title="第三步：在微信小程序中使用"></a>第三步：在微信小程序中使用</h2><p>新建微信小程序，将默认生成的代码删除。<br>1–在index.css文件中添加样式内容。打开刚刚我们经过转换的解压出来的文件，找到stylesheet.css，将其中的内容全部复制到index.css文件中。注意是转换过的那个文件。<br><img src="/files/images/2020081206.png" alt=""><br>2–打开没有转换过的download.zip解压出来的文件，找到iconfont.css文件，将这个文件中的内容复制到index.css文件中。@font-face这部分不要。<br><img src="/files/images/2020081207.png" alt=""><br>3–在index.wxml中使用字体图标。代码如下：</p><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--index.wxml--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    个人中心    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>iconfont iconcount<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">50</span>px<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span>red</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span></code></pre><p>字体图标跟字体一样，可以通过font-size来改变大小，通过指定color来改变他的颜色。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS + JS 网站变灰（变黑白）</title>
      <link href="/categories/frontend/f3b61b38.html"/>
      <url>/categories/frontend/f3b61b38.html</url>
      
        <content type="html"><![CDATA[<h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* 特殊日子 全站灰色 */</span><span class="token selector"><span class="token class">.site-gray</span>, <span class="token class">.site-gray</span> *</span><span class="token punctuation">{</span>    <span class="token property">filter</span><span class="token punctuation">:</span> gray <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">filter</span><span class="token punctuation">:</span> <span class="token property">progid</span><span class="token punctuation">:</span>DXImageTransform<span class="token number">.</span>Microsoft<span class="token number">.</span><span class="token function">BasicImage</span><span class="token punctuation">(</span>grayscale=<span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">filter</span><span class="token punctuation">:</span> <span class="token function">grayscale</span><span class="token punctuation">(</span><span class="token number">100%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">-webkit-filter</span><span class="token punctuation">:</span> <span class="token function">grayscale</span><span class="token punctuation">(</span><span class="token number">100%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">-moz-filter</span><span class="token punctuation">:</span> <span class="token function">grayscale</span><span class="token punctuation">(</span><span class="token number">100%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">-ms-filter</span><span class="token punctuation">:</span> <span class="token function">grayscale</span><span class="token punctuation">(</span><span class="token number">100%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">-o-filter</span><span class="token punctuation">:</span> <span class="token function">grayscale</span><span class="token punctuation">(</span><span class="token number">100%</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></code></pre><h2 id="HTML及JS"><a href="#HTML及JS" class="headerlink" title="HTML及JS"></a>HTML及JS</h2><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>site-gray<span class="token punctuation">"</span></span> <span class="token attr-name">data-gray</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>网站变灰<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 特殊日子IE10及其以上浏览器 全站灰色 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>grayscale.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> navStr <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".site-gray"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">var</span> gray <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"data-gray"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span> gray <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>navStr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"msie 10.0"</span><span class="token punctuation">)</span><span class="token operator">!==</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">||</span>navStr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"rv:11.0"</span><span class="token punctuation">)</span><span class="token operator">!==</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 判断是IE10或者IE11</span>                <span class="token function">grayscale</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">grayscale</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">"img"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"html"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"site-gray"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"data-gray"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span>        <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>navStr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"msie 10.0"</span><span class="token punctuation">)</span><span class="token operator">!==</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">||</span>navStr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"rv:11.0"</span><span class="token punctuation">)</span><span class="token operator">!==</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 判断是IE10或者IE11</span>                grayscale<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>                grayscale<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">"img"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"html"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">"site-gray"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"data-gray"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h2 id="相关文件"><a href="#相关文件" class="headerlink" title="相关文件"></a>相关文件</h2><p><a href="/download/grayscale.js"">grayscale.js</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS规范</title>
      <link href="/categories/frontend/83dcefb7.html"/>
      <url>/categories/frontend/83dcefb7.html</url>
      
        <content type="html"><![CDATA[<h2 id="分类方法"><a href="#分类方法" class="headerlink" title="分类方法"></a>分类方法</h2><h3 id="CSS文件的分类和引用顺序"><a href="#CSS文件的分类和引用顺序" class="headerlink" title="CSS文件的分类和引用顺序"></a>CSS文件的分类和引用顺序</h3><p>通常，一个项目我们只引用一个CSS，但是对于较大的项目，我们需要把CSS文件进行分类。<br>我们按照CSS的性质和用途，将CSS文件分成“公共型样式”、“特殊型样式”、“皮肤型样式”，并以此顺序引用（按需求决定是否添加版本号）。<br>1.公共型样式：包括了以下几个部分：“标签的重置和设置默认值”、“统一调用背景图和清除浮动或其他需统一处理的长样式”、“网站通用布局”、“通用模块和其扩展”、“元件和其扩展”、“功能类样式”、“皮肤类样式”。<br>2.特殊型样式：当某个栏目或页面的样式与网站整体差异较大或者维护率较高时，可以独立引用一个样式：“特殊的布局、模块和元件及扩展”、“特殊的功能、颜色和背景”，也可以是某个大型控件或模块的独立样式。<br>3.皮肤型样式：如果产品需要换肤功能，那么我们需要将颜色、背景等抽离出来放在这里。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>assets/css/global.css<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>assets/css/index.css<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>assets/css/skin.css<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code></pre><a id="more"></a><h3 id="CSS内部的分类及其顺序"><a href="#CSS内部的分类及其顺序" class="headerlink" title="CSS内部的分类及其顺序"></a>CSS内部的分类及其顺序</h3><p>1.重置（reset）和默认（base）（tags）：消除默认样式和浏览器差异，并设置部分标签的初始样式，以减少后面的重复劳动！你可以根据你的网站需求设置！<br>2.统一处理：建议在这个位置统一调用背景图（这里指多个布局或模块或元件共用的图）和清除浮动（这里指通用性较高的布局、模块、元件内的清除）等统一设置处理的样式！<br>3.布局（grid）（.g-）：将页面分割为几个大块，通常有头部、主体、主栏、侧栏、尾部等！<br>4.模块（module）（.m-）：通常是一个语义化的可以重复使用的较大的整体！比如导航、登录、注册、各种列表、评论、搜索等！<br>5.元件（unit）（.u-）：通常是一个不可再分的较为小巧的个体，通常被重复用于各种模块中！比如按钮、输入框、loading、图标等！<br>6.功能（function）（.f-）：为方便一些常用样式的使用，我们将这些使用率较高的样式剥离出来，按需使用，通常这些选择器具有固定样式表现，比如清除浮动等！不可滥用！<br>7.皮肤（skin）（.s-）：如果你需要把皮肤型的样式抽离出来，通常为文字色、背景色（图）、边框色等，非换肤型网站通常只提取文字色！非换肤型网站不可滥用此类！<br>8.状态（.z-）：为状态类样式加入前缀，统一标识，方便识别，她只能组合使用或作为后代出现（.u-ipt.z-dis{}，.m-list li.z-sel{}），具体详见命名规则的扩展相关项。<br>功能类和皮肤类样式为表现化的样式，请不要滥用！以上顺序可以按需求适当调整。</p><h2 id="命名规则"><a href="#命名规则" class="headerlink" title="命名规则"></a>命名规则</h2><h3 id="使用类选择器，放弃ID选择器"><a href="#使用类选择器，放弃ID选择器" class="headerlink" title="使用类选择器，放弃ID选择器"></a>使用类选择器，放弃ID选择器</h3><p>ID在一个页面中的唯一性导致了如果以ID为选择器来写CSS，就无法重用。</p><h3 id="NEC特殊字符：”-“连字符"><a href="#NEC特殊字符：”-“连字符" class="headerlink" title="NEC特殊字符：”-“连字符"></a>NEC特殊字符：”-“连字符</h3><p>“-“在本规范中并不表示连字符的含义。<br>她只表示两种含义：分类前缀分隔符、扩展分隔符，详见以下具体规则。</p><h3 id="分类的命名方法：使用单个字母-”-“为前缀"><a href="#分类的命名方法：使用单个字母-”-“为前缀" class="headerlink" title="分类的命名方法：使用单个字母+”-“为前缀"></a>分类的命名方法：使用单个字母+”-“为前缀</h3><p>布局（grid）（.g-）；模块（module）（.m-）；元件（unit）（.u-）；功能（function）（.f-）；皮肤（skin）（.s-）；状态（.z-）。</p><blockquote><ul><li>在你样式中的选择器总是要以上面前五类开头，然后在里面使用后代选择器。</li></ul></blockquote><ul><li>如果这五类不能满足你的需求，你可以另外定义一个或多个大类，但必须符合单个字母+”-“为前缀的命名规则，即 .x- 的格式。</li><li>特殊：.j-将被专用于JS获取节点，请勿使用.j-定义样式。</li></ul><h3 id="后代选择器命名"><a href="#后代选择器命名" class="headerlink" title="后代选择器命名"></a>后代选择器命名</h3><ul><li>约定<strong>不以单个字母+”-“为前缀</strong>且长度大于等于2的类选择器为后代选择器，如：.item为m-list模块里的每一个项，.text为m-list模块里的文本部分：.m-list .item{}.m-list .text{}。</li><li>一个语义化的标签也可以是后代选择器，比如：.m-list li{}。</li><li><strong>不允许单个字母的类选择器</strong>出现，原因详见下面的“模块和元件的后代选择器的扩展类”。<br>通过使用后代选择器的方法，你不需要考虑他的命名是否已被使用，因为他只在当前模块或元件中生效，<strong>同样的样式名可以在不同的模块或元件中重复使用</strong>，互不干扰；在多人协作或者分模块协作的时候效果尤为明显！<br>后代选择器不需要完整表现结构树层级，<strong>尽量能短则短</strong>。</li></ul><blockquote><p>后代选择器<strong>不要在页面布局中使用</strong>，因为污染的可能性较大；</p></blockquote><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* 这里的.itm和.cnt只在.m-list中有效 */</span><span class="token selector"><span class="token class">.m-list</span></span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.m-list</span> <span class="token class">.itm</span></span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">1</span>px<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span><span class="token number">1</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.m-list</span> <span class="token class">.cnt</span></span><span class="token punctuation">{</span><span class="token property">margin-left</span><span class="token punctuation">:</span><span class="token number">100</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* 这里的.cnt和.num只在.m-page中有效 */</span><span class="token selector"><span class="token class">.m-page</span></span><span class="token punctuation">{</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">20</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.m-page</span> <span class="token class">.cnt</span></span><span class="token punctuation">{</span><span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.m-page</span> <span class="token class">.num</span></span><span class="token punctuation">{</span><span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid <span class="token hexcode">#ddd</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="命名应简约而不失语义"><a href="#命名应简约而不失语义" class="headerlink" title="命名应简约而不失语义"></a>命名应简约而不失语义</h3><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* 反对：表现化的或没有语义的命名 */</span><span class="token selector"><span class="token class">.m-abc</span> <span class="token class">.green2</span></span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.g-left2</span></span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* 推荐：使用有语义的简短的命名 */</span><span class="token selector"><span class="token class">.m-list</span> <span class="token class">.wrap2</span></span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.g-side2</span></span><span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><h3 id="相同语义的不同类命名"><a href="#相同语义的不同类命名" class="headerlink" title="相同语义的不同类命名"></a>相同语义的不同类命名</h3><p>方法：直接加数字或字母区分即可（如：.m-list、.m-list2、.m-list3等，都是列表模块，但是是完全不一样的模块）。<br>其他举例：.f-fw0、.f-fw1、.s-fc0、.s-fc1、.m-logo2、.m-logo3、u-btn、u-btn2等等。</p><h3 id="模块和元件的扩展类的命名方法"><a href="#模块和元件的扩展类的命名方法" class="headerlink" title="模块和元件的扩展类的命名方法"></a>模块和元件的扩展类的命名方法</h3><p>当A、B、C、…它们类型相同且外形相似区别不大，那么就以它们中出现率最高的做成基类，其他做成基类的扩展。<br>方法：+“-”+数字或字母（如：.m-list的扩展类为.m-list-1、.m-list-2等）。<br>补充：基类自身可以独立使用（如：class=”m-list”即可），扩展类必须基于基类使用（如：class=”m-list m-list-2”）。<br>如果你的扩展类是表示不同状态，那么你可以这样命名：u-btn-dis，u-btn-hov，m-box-sel，m-box-hov等等，然后像这样使用：class=”u-btn u-btn-dis”。<br>如果你的网站可以不兼容IE6等浏览器，那么你标识状态的方法也可以采取独立状态分类（.z-）方法：.u-btn.z-dis，.m-box.z-sel，然后像这样使用：class=”u-btn z-dis”。</p><h3 id="模块和元件的后代选择器的扩展类"><a href="#模块和元件的后代选择器的扩展类" class="headerlink" title="模块和元件的后代选择器的扩展类"></a>模块和元件的后代选择器的扩展类</h3><p>有时候模块内会有些类似的东西，如果你没有把它们做成元件和扩展，那么也可以使用后代选择器和扩展。</p><p>后代选择器：.m-login .btn{}。<br>后代选择器扩展：.m-login .btn-1{}，.m-login .btn-dis{}。<br>同样也可以采取独立状态分类（.z-）方法：.m-login .btn.z-dis{}，然后像这样使用：class=”btn z-dis”。</p><blockquote><p>注：此方法用于类选择器，直接使用标签做为选择器的则不需要使用此命名方法。<br>注：为防止后代选择器的扩展类和大类命名规范冲突，后代选择器不允许使用单个字母。<br>比如：.m-list .a{}是不允许的，因为当这个.a需要扩展的时候就会变成.a-bb，这样就和大类的命名规范冲突。</p></blockquote><h3 id="分组选择器有时可以代替扩展方法"><a href="#分组选择器有时可以代替扩展方法" class="headerlink" title="分组选择器有时可以代替扩展方法"></a>分组选择器有时可以代替扩展方法</h3><p>有时候虽然两个同类型的模块很相似，但是你希望他们之间不要有依赖关系，也就是说你不希望使用扩展的方法，那么你可以通过合并选择器来设置共性的样式。<br>使用本方法的前提是：相同类型、功能和外观都相似，写在同一片代码区域方便维护。</p><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* 两个元件共性的样式 */</span><span class="token selector"><span class="token class">.u-tip1</span>,<span class="token class">.u-tip2</span></span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.u-tip1</span> <span class="token class">.itm</span>,<span class="token class">.u-tip2</span> <span class="token class">.itm</span></span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* 在分别是两个元件各自的样式 */</span><span class="token comment" spellcheck="true">/* tip1 */</span><span class="token selector"><span class="token class">.u-tip1</span></span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.u-tip1</span> <span class="token class">.itm</span></span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* tip2 */</span><span class="token selector"><span class="token class">.u-tip2</span></span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.u-tip2</span> <span class="token class">.itm</span></span><span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><h3 id="防止污染和被污染"><a href="#防止污染和被污染" class="headerlink" title="防止污染和被污染"></a>防止污染和被污染</h3><p>当模块或元件之间互相嵌套，且使用了相同的标签选择器或其他后代选择器，那么里面的选择器就会被外面相同的选择器所影响。<br>所以，如果你的模块或元件可能嵌套或被嵌套于其他模块或元件，那么要慎用标签选择器，必要时采用类选择器，并注意命名方式，可以采用.m-layer .layerxxx、.m-list2 .list2xxx的形式来降低后代选择器的污染性。</p><h2 id="代码格式"><a href="#代码格式" class="headerlink" title="代码格式"></a>代码格式</h2><h3 id="选择器、属性和值都使用小写"><a href="#选择器、属性和值都使用小写" class="headerlink" title="选择器、属性和值都使用小写"></a>选择器、属性和值都使用小写</h3><p>在xhtml标准中规定了所有标签、属性和值都小写，CSS也是如此。</p><h3 id="单行写完一个选择器定义"><a href="#单行写完一个选择器定义" class="headerlink" title="单行写完一个选择器定义"></a>单行写完一个选择器定义</h3><p>便于选择器的寻找和阅读，也便于插入新选择器和编辑，便于模块等的识别。去除多余空格，使代码紧凑减少换行。<br>如果有嵌套定义，可以采取内部单行的形式。</p><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* 单行定义一个选择器 */</span><span class="token selector"><span class="token class">.m-list</span> li,<span class="token class">.m-list</span> h3</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">100</span>px<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span><span class="token number">10</span>px<span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid <span class="token hexcode">#ddd</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* 这是一个有嵌套定义的选择器 */</span><span class="token atrule"><span class="token rule">@media</span> all and <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span>600px<span class="token punctuation">)</span></span><span class="token punctuation">{</span>    <span class="token selector"><span class="token class">.m-class1</span> <span class="token class">.itm</span></span><span class="token punctuation">{</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">17</span>px<span class="token punctuation">;</span><span class="token property">line-height</span><span class="token punctuation">:</span><span class="token number">17</span>px<span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">12</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.m-class2</span> <span class="token class">.itm</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">100</span>px<span class="token punctuation">;</span><span class="token property">overflow</span><span class="token punctuation">:</span>hidden<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@-webkit-keyframes</span> showitm</span><span class="token punctuation">{</span>    <span class="token selector">0%</span><span class="token punctuation">{</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token property">opacity</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector">100%</span><span class="token punctuation">{</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100</span>px<span class="token punctuation">;</span><span class="token property">opacity</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="最后一个值也以分号结尾"><a href="#最后一个值也以分号结尾" class="headerlink" title="最后一个值也以分号结尾"></a>最后一个值也以分号结尾</h3><p>通常在大括号结束前的值可以省略分号，但是这样做会对修改、添加和维护工作带来不必要的失误和麻烦。</p><h3 id="省略值为0时的单位"><a href="#省略值为0时的单位" class="headerlink" title="省略值为0时的单位"></a>省略值为0时的单位</h3><p>为节省不必要的字节同时也使阅读方便，我们将0px、0em、0%等值缩写为0。</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.m-box</span></span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">0</span> <span class="token number">10</span>px<span class="token punctuation">;</span><span class="token property">background-position</span><span class="token punctuation">:</span><span class="token number">50%</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="使用单引号"><a href="#使用单引号" class="headerlink" title="使用单引号"></a>使用单引号</h3><p>省略url引用中的引号，其他需要引号的地方使用单引号。</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.m-box</span></span><span class="token punctuation">{</span><span class="token property">background</span><span class="token punctuation">:</span><span class="token url">url(bg.png)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.m-box</span><span class="token pseudo-element">:after</span></span><span class="token punctuation">{</span><span class="token property">content</span><span class="token punctuation">:</span><span class="token string">'.'</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="使用16进制表示颜色值"><a href="#使用16进制表示颜色值" class="headerlink" title="使用16进制表示颜色值"></a>使用16进制表示颜色值</h3><p>除非你需要透明度而使用rgba，否则都使用#f0f0f0这样的表示方法，并尽量缩写。</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.m-box</span></span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span><span class="token hexcode">#f00</span><span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span><span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>,<span class="token number">0</span>,<span class="token number">0</span>,<span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="根据属性的重要性按顺序书写"><a href="#根据属性的重要性按顺序书写" class="headerlink" title="根据属性的重要性按顺序书写"></a>根据属性的重要性按顺序书写</h3><p>只遵循横向顺序即可，先显示定位布局类属性，后盒模型等自身属性，最后是文本类及修饰类属性。</p><table><thead><tr><th align="center">显示属性</th><th align="center">自身属性</th><th align="center">文本属性和其他修饰</th></tr></thead><tbody><tr><td align="center">display</td><td align="center">width</td><td align="center">font</td></tr><tr><td align="center">visibility</td><td align="center">height</td><td align="center">text-align</td></tr><tr><td align="center">position</td><td align="center">margin</td><td align="center">text-decoration</td></tr><tr><td align="center">float</td><td align="center">padding</td><td align="center">vertical-align</td></tr><tr><td align="center">clear</td><td align="center">border</td><td align="center">white-space</td></tr><tr><td align="center">list-style</td><td align="center">overflow</td><td align="center">color</td></tr><tr><td align="center">top</td><td align="center">min-width</td><td align="center">background</td></tr></tbody></table><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.m-box</span></span><span class="token punctuation">{</span><span class="token property">position</span><span class="token punctuation">:</span>relative<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">600</span>px<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">0</span> auto <span class="token number">10</span>px<span class="token punctuation">;</span><span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span><span class="token hexcode">#000</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>如果属性间存在关联性，则不要隔开写。</p><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* 这里的height和line-height有关联性 */</span><span class="token selector"><span class="token class">.m-box</span></span><span class="token punctuation">{</span><span class="token property">position</span><span class="token punctuation">:</span>relative<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">20</span>px<span class="token punctuation">;</span><span class="token property">line-height</span><span class="token punctuation">:</span><span class="token number">20</span>px<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span><span class="token number">5</span>px<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span><span class="token hexcode">#000</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="私有在前，标准在后"><a href="#私有在前，标准在后" class="headerlink" title="私有在前，标准在后"></a>私有在前，标准在后</h3><p>先写带有浏览器私有标志的，后写W3C标准的。</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.m-box</span></span><span class="token punctuation">{</span><span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span><span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token hexcode">#000</span><span class="token punctuation">;</span><span class="token property">-moz-box-shadow</span><span class="token punctuation">:</span><span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token hexcode">#000</span><span class="token punctuation">;</span><span class="token property">box-shadow</span><span class="token punctuation">:</span><span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token hexcode">#000</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="注释格式"><a href="#注释格式" class="headerlink" title="注释格式"></a>注释格式</h3><p>对选择器的注释统一写在被注释对象的上一行，对属性及值的注释写于分号后。<br>注释内容两端需空格，已确保即使在编码错误的情况下也可以正确解析样式。<br>在必要的情况下，可以使用块状注释，块状注释保持统一的缩进对齐。<br>原则上每个系列的样式都需要有一个注释，言简意赅的表明名称、用途、注意事项等。</p><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* 块状注释文字 * 块状注释文字 * 块状注释文字 */</span><span class="token selector"><span class="token class">.m-list</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">500</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.m-list</span> li</span><span class="token punctuation">{</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">20</span>px<span class="token punctuation">;</span><span class="token property">line-height</span><span class="token punctuation">:</span><span class="token number">20</span>px<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/* 这里是对line-height的一个注释 */</span><span class="token property">overflow</span><span class="token punctuation">:</span>hidden<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.m-list</span> li a</span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span><span class="token hexcode">#333</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* 单行注释文字 */</span><span class="token selector"><span class="token class">.m-list</span> li em</span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span><span class="token hexcode">#666</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="原则上不允许使用Hack"><a href="#原则上不允许使用Hack" class="headerlink" title="原则上不允许使用Hack"></a>原则上不允许使用Hack</h3><p>很多不兼容问题可以通过改变方法和思路来解决，并非一定需要Hack，根据经验你完全可以绕过某些兼容问题。<br>一种合理的结构和合理的样式，是极少会碰到兼容问题的。<br>由于浏览器自身缺陷，我们无法避开的时候，可以允许使用适当的Hack。</p><h3 id="统一Hack方法"><a href="#统一Hack方法" class="headerlink" title="统一Hack方法"></a>统一Hack方法</h3><p>统一使用“*”和“_”分别对IE7和6进行Hack。如下代码所示：</p><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* IE7会显示灰色#888，IE6会显示白色#fff，其他浏览器显示黑色#000 */</span><span class="token selector"><span class="token class">.m-list</span></span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span><span class="token hexcode">#000</span><span class="token punctuation">;</span>*<span class="token property">color</span><span class="token punctuation">:</span><span class="token hexcode">#888</span><span class="token punctuation">;</span><span class="token property">_color</span><span class="token punctuation">:</span><span class="token hexcode">#fff</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="建议并适当缩写值"><a href="#建议并适当缩写值" class="headerlink" title="建议并适当缩写值"></a>建议并适当缩写值</h3><p>“建议并适当”是因为缩写总是会包含一系列的值，而有时候我们并不希望设置某一值，反而造成了麻烦，那么这时候你可以不缩写，而是分开写。<br>当然，在一切可以缩写的情况下，请务必缩写，它最大的好处就是节省了字节，便于维护，并使阅读更加一目了然。</p><h3 id="选择器顺序"><a href="#选择器顺序" class="headerlink" title="选择器顺序"></a>选择器顺序</h3><p>请综合考虑以下顺序依据：</p><ul><li>从大到小（以选择器的范围为准）</li><li>从低到高（以等级上的高低为准）</li><li>从先到后（以结构上的先后为准）</li><li>从父到子（以结构上的嵌套为准）</li></ul><p>以下仅为简单示范：</p><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* 从大到小 */</span><span class="token selector"><span class="token class">.m-list</span> p</span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.m-list</span> p<span class="token class">.part</span></span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">1</span>px<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span><span class="token number">1</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* 从低到高 */</span><span class="token selector"><span class="token class">.m-logo</span> a</span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span><span class="token hexcode">#f00</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.m-logo</span> a<span class="token pseudo-class">:hover</span></span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span><span class="token hexcode">#fff</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* 从先到后 */</span><span class="token selector"><span class="token class">.g-hd</span></span><span class="token punctuation">{</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">60</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.g-bd</span></span><span class="token punctuation">{</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">60</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.g-ft</span></span><span class="token punctuation">{</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">60</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* 从父到子 */</span><span class="token selector"><span class="token class">.m-list</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.m-list</span> <span class="token class">.itm</span></span><span class="token punctuation">{</span><span class="token property">float</span><span class="token punctuation">:</span>left<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="选择器等级"><a href="#选择器等级" class="headerlink" title="选择器等级"></a>选择器等级</h3><p>a = 行内样式style。<br>b = ID选择器的数量。<br>c = 类、伪类和属性选择器的数量。<br>d = 类型选择器和伪元素选择器的数量。</p><table><thead><tr><th align="center">选择器</th><th align="center">等级(a,b,c,d)</th></tr></thead><tbody><tr><td align="center">style=””</td><td align="center">1,0,0,0</td></tr><tr><td align="center">#wrapper #content {}</td><td align="center">0,2,0,0</td></tr><tr><td align="center">#content .dateposted {}</td><td align="center">0,1,1,0</td></tr><tr><td align="center">div#content {}</td><td align="center">0,1,0,1</td></tr><tr><td align="center">#content p {}</td><td align="center">0,1,0,1</td></tr><tr><td align="center">#content {}</td><td align="center">0,1,0,0</td></tr><tr><td align="center">p.comment .dateposted {}</td><td align="center">0,0,2,1</td></tr><tr><td align="center">div.comment p {}</td><td align="center">0,0,1,2</td></tr><tr><td align="center">.comment p {}</td><td align="center">0,0,1,1</td></tr><tr><td align="center">p.comment {}</td><td align="center">0,0,1,1</td></tr><tr><td align="center">.comment {}</td><td align="center">0,0,1,0</td></tr><tr><td align="center">div p {}</td><td align="center">0,0,0,2</td></tr><tr><td align="center">p {}</td><td align="center">0,0,0,1</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bootstrap3网格系统兼容IE7</title>
      <link href="/categories/frontend/6dd28e9b.html"/>
      <url>/categories/frontend/6dd28e9b.html</url>
      
        <content type="html"><![CDATA[<h2 id="HTML基本结构"><a href="#HTML基本结构" class="headerlink" title="HTML基本结构"></a>HTML基本结构</h2><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zh-cn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ie<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>demo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>shortcut icon<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>image/x-icon<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>favicon.ico<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/lib/bootstrap/css/bootstrap.min.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/css/style.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--[if lte IE 7]>        &lt;link rel="stylesheet" href="/css/despiseIE.css">    &lt;![endif]--></span>    <span class="token comment" spellcheck="true">&lt;!--[if lt IE 9]>        &lt;script src="/js/html5shiv.js">&lt;/script>        &lt;script src="/js/respond.min.js">&lt;/script>    &lt;![endif]--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row f-mlrf10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>f-wd100<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-xs-11 col-sm-11 col-md-1 col-lg-1 f-npd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>f-mlr10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        111                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-xs-1 col-sm-1 col-md-3 col-lg-3 f-npd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>f-mlr10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        222                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-xs-1 col-sm-1 col-md-3 col-lg-3 f-npd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>f-mlr10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        333                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-xs-1 col-sm-1 col-md-3 col-lg-3 f-npd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>f-mlr10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        444                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-xs-1 col-sm-1 col-md-2 col-lg-2 f-npd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>f-mlr10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        555                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-xs-1 col-sm-3 col-md-3 col-lg-2 f-npd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>f-mlr10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        666                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-xs-1 col-sm-1 col-md-1 col-lg-1 f-npd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>f-mlr10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        777                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-xs-1 col-sm-1 col-md-1 col-lg-1 f-npd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>f-mlr10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        888                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-xs-1 col-sm-1 col-md-1 col-lg-1 f-npd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>f-mlr10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        999                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-xs-1 col-sm-1 col-md-1 col-lg-1 f-npd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>f-mlr10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        10                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-xs-1 col-sm-1 col-md-1 col-lg-1 f-npd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>f-mlr10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        11                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-xs-1 col-sm-1 col-md-1 col-lg-1 col-lg-push-2 f-npd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>f-mlr10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        12                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/js/jquery.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/lib/bootstrap/js/bootstrap.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h2 id="CSS基本结构"><a href="#CSS基本结构" class="headerlink" title="CSS基本结构"></a>CSS基本结构</h2><h3 id="style-css"><a href="#style-css" class="headerlink" title="style.css"></a>style.css</h3><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*reset*/</span><span class="token selector">*</span><span class="token punctuation">{</span><span class="token property">touch-action</span><span class="token punctuation">:</span> pan-y<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">html,body,h1,h2,h3,h4,h5,h6,div,dl,dt,dd,ul,ol,li,p,blockquote,pre,hr,figure,table,caption,th,td,form,fieldset,legend,input,button,textarea,menu</span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">header,footer,section,article,aside,nav,hgroup,address,figure,figcaption,menu,details</span><span class="token punctuation">{</span><span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">html</span><span class="token punctuation">{</span><span class="token property">overflow-y</span><span class="token punctuation">:</span> scroll<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token pseudo-class">:root</span></span><span class="token punctuation">{</span><span class="token property">overflow-y</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span> <span class="token property">overflow-x</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">table</span><span class="token punctuation">{</span><span class="token property">border-collapse</span><span class="token punctuation">:</span> collapse<span class="token punctuation">;</span> <span class="token property">border-spacing</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">caption,th</span><span class="token punctuation">{</span><span class="token property">font-weight</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">html,body,fieldset,iframe,abbr</span><span class="token punctuation">{</span><span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">i,cite,em,var,address,dfn</span><span class="token punctuation">{</span><span class="token property">font-style</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token attribute">[hidefocus]</span>,summary</span><span class="token punctuation">{</span><span class="token property">outline</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">ul,ol,ul li,li,ol li</span><span class="token punctuation">{</span><span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">h1,h2,h3,h4,h5,h6,small</span><span class="token punctuation">{</span><span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">sup,sub</span><span class="token punctuation">{</span><span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">83%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">pre,code,kbd,samp</span><span class="token punctuation">{</span><span class="token property">font-family</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">q<span class="token pseudo-element">:before</span>,q<span class="token pseudo-element">:after</span></span><span class="token punctuation">{</span><span class="token property">content</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">textarea</span><span class="token punctuation">{</span><span class="token property">overflow</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span> <span class="token property">resize</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">label,summary</span><span class="token punctuation">{</span><span class="token property">cursor</span><span class="token punctuation">:</span> default<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">a,button</span><span class="token punctuation">{</span><span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">h1,h2,h3,h4,h5,h6,em,strong,b</span><span class="token punctuation">{</span><span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">ins,u,s,a,a<span class="token pseudo-class">:hover</span></span><span class="token punctuation">{</span><span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">body,textarea,input,button,select,keygen,legend</span><span class="token punctuation">{</span><span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"微软雅黑"</span><span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">16</span>px<span class="token punctuation">;</span> <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#454545</span><span class="token punctuation">;</span> <span class="token property">outline</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">a</span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#3d3d3d</span><span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> <span class="token property">hide-focus</span><span class="token punctuation">:</span> <span class="token function">expression</span><span class="token punctuation">(</span>this<span class="token number">.</span>hideFocus=true<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">a<span class="token pseudo-class">:hover</span></span><span class="token punctuation">{</span><span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#cd0000</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">a<span class="token pseudo-class">:focus</span></span><span class="token punctuation">{</span><span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> <span class="token property">outline</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">-moz-outline-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">img</span><span class="token punctuation">{</span><span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">0</span> none<span class="token punctuation">;</span> <span class="token property">width</span><span class="token punctuation">:</span> auto<span class="token entity" title="\9">\9</span><span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span> <span class="token property">vertical-align</span><span class="token punctuation">:</span> top<span class="token punctuation">;</span> <span class="token property">-ms-interpolation-mode</span><span class="token punctuation">:</span> bicubic<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">button,input,select,textarea</span><span class="token punctuation">{</span><span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span> <span class="token property">font-family</span><span class="token punctuation">:</span> tahoma<span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">outline</span><span class="token punctuation">:</span> <span class="token number">0</span> none<span class="token punctuation">;</span> <span class="token property">vertical-align</span><span class="token punctuation">:</span> baseline<span class="token punctuation">;</span> <span class="token property">_overflow</span><span class="token punctuation">:</span> visible<span class="token punctuation">;</span> *<span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span> *<span class="token property">overflow</span><span class="token punctuation">:</span> visible<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*function*/</span><span class="token selector"><span class="token class">.f-dn</span></span><span class="token punctuation">{</span><span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.f-db</span></span><span class="token punctuation">{</span><span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.f-fl</span></span><span class="token punctuation">{</span><span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.f-fr</span></span><span class="token punctuation">{</span><span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.f-pr</span></span><span class="token punctuation">{</span><span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.f-pa</span></span><span class="token punctuation">{</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.f-pf</span></span><span class="token punctuation">{</span><span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.f-oh</span></span><span class="token punctuation">{</span><span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.f-fwn</span></span><span class="token punctuation">{</span><span class="token property">font-weight</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.f-fwb</span></span><span class="token punctuation">{</span><span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.f-toe</span></span><span class="token punctuation">{</span><span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span> <span class="token property">word-wrap</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span> <span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span> <span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.f-csp</span></span><span class="token punctuation">{</span><span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.f-csd</span></span><span class="token punctuation">{</span><span class="token property">cursor</span><span class="token punctuation">:</span> default<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.f-csh</span></span><span class="token punctuation">{</span><span class="token property">cursor</span><span class="token punctuation">:</span> help<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.f-csm</span></span><span class="token punctuation">{</span><span class="token property">cursor</span><span class="token punctuation">:</span> move<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.f-usn</span></span><span class="token punctuation">{</span><span class="token property">-webkit-user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> <span class="token property">-moz-user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> <span class="token property">-ms-user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> <span class="token property">-o-user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> <span class="token property">user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.f-clear</span></span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span> <span class="token property">visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span> <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">"."</span><span class="token punctuation">;</span> <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token selector"><span class="token class">.f-clearfix</span><span class="token pseudo-element">:after</span></span><span class="token punctuation">{</span><span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">content</span><span class="token punctuation">:</span><span class="token string">" "</span><span class="token punctuation">;</span> <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">* html <span class="token class">.f-clearfix</span></span><span class="token punctuation">{</span><span class="token property">zoom</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">*<span class="token pseudo-class">:first-child</span>+html <span class="token class">.f-clearfix</span></span><span class="token punctuation">{</span><span class="token property">zoom</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.f-wd100</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.f-npd</span></span><span class="token punctuation">{</span><span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.f-mlr5</span></span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">5</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.f-mlr10</span></span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">10</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.f-mlr15</span></span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">15</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.f-mlr20</span></span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">20</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.f-mlrf5</span></span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> -<span class="token number">5</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.f-mlrf10</span></span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> -<span class="token number">10</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.f-mlrf15</span></span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> -<span class="token number">15</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.f-mlrf20</span></span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> -<span class="token number">20</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.f-plr5</span></span><span class="token punctuation">{</span><span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">5</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.f-plr10</span></span><span class="token punctuation">{</span><span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">10</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.f-plr15</span></span><span class="token punctuation">{</span><span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">15</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.f-plr20</span></span><span class="token punctuation">{</span><span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">20</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*media query*/</span><span class="token comment" spellcheck="true">/*big pcScreen*/</span><span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span>1280px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>    <span class="token selector"><span class="token class">.container</span></span><span class="token punctuation">{</span><span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">1280</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*large pcScreen*/</span><span class="token atrule"><span class="token rule">@media</span> screen and <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span>1279px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*medium pcScreen*/</span><span class="token atrule"><span class="token rule">@media</span> screen and <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 1199px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*pad*/</span><span class="token atrule"><span class="token rule">@media</span> screen and <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 991px <span class="token punctuation">)</span></span><span class="token punctuation">{</span>    <span class="token selector"><span class="token class">.f-md-mb10</span></span><span class="token punctuation">{</span><span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.f-md-mb20</span></span><span class="token punctuation">{</span><span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.f-md-ha</span></span><span class="token punctuation">{</span><span class="token property">height</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*phone*/</span><span class="token atrule"><span class="token rule">@media</span> screen and <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 767px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*small*/</span><span class="token atrule"><span class="token rule">@media</span> screen and <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 638px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*print*/</span><span class="token atrule"><span class="token rule">@media</span> print</span> <span class="token punctuation">{</span>    <span class="token selector">a<span class="token attribute">[href]</span><span class="token pseudo-element">:after</span> </span><span class="token punctuation">{</span>        <span class="token property">content</span><span class="token punctuation">:</span> none!important<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="despiseIE-css"><a href="#despiseIE-css" class="headerlink" title="despiseIE.css"></a>despiseIE.css</h3><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.col-xs-1</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">8.33%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.col-xs-2</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">16.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.col-xs-3</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">24.99%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.col-xs-4</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">33.32%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.col-xs-5</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">41.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.col-xs-6</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">49.99%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.col-xs-7</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">58.32%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.col-xs-8</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">66.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.col-xs-9</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">74.99%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.col-xs-10</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">83.32%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.col-xs-11</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">91.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.col-xs-pull-1</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">8.33%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.col-xs-pull-2</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">16.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.col-xs-pull-3</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">24.99%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.col-xs-pull-4</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">33.32%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.col-xs-pull-5</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">41.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.col-xs-pull-6</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">49.99%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.col-xs-pull-7</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">58.32%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.col-xs-pull-8</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">66.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.col-xs-pull-9</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">74.99%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.col-xs-pull-10</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">83.32%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.col-xs-pull-11</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">91.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.col-xs-push-1</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">8.33%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.col-xs-push-2</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">16.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.col-xs-push-3</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">24.99%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.col-xs-push-4</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">33.32%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.col-xs-push-5</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">41.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.col-xs-push-6</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">49.99%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.col-xs-push-7</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">58.32%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.col-xs-push-8</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">66.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.col-xs-push-9</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">74.99%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.col-xs-push-10</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">83.32%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.col-xs-push-11</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">91.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 768px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>    <span class="token selector"><span class="token class">.col-sm-1</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">8.33%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-sm-2</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">16.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-sm-3</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">24.99%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-sm-4</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">33.32%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-sm-5</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">41.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-sm-6</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">49.99%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-sm-7</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">58.32%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-sm-8</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">66.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-sm-9</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">74.99%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-sm-10</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">83.32%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-sm-11</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">91.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-sm-pull-1</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">8.33%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-sm-pull-2</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">16.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-sm-pull-3</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">24.99%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-sm-pull-4</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">33.32%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-sm-pull-5</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">41.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-sm-pull-6</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">49.99%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-sm-pull-7</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">58.32%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-sm-pull-8</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">66.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-sm-pull-9</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">74.99%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-sm-pull-10</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">83.32%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-sm-pull-11</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">91.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-sm-push-1</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">8.33%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-sm-push-2</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">16.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-sm-push-3</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">24.99%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-sm-push-4</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">33.32%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-sm-push-5</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">41.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-sm-push-6</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">49.99%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-sm-push-7</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">58.32%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-sm-push-8</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">66.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-sm-push-9</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">74.99%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-sm-push-10</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">83.32%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-sm-push-11</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">91.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 992px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>    <span class="token selector"><span class="token class">.col-md-1</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">8.33%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-md-2</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">16.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-md-3</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">24.99%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-md-4</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">33.32%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-md-5</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">41.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-md-6</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">49.99%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-md-7</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">58.32%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-md-8</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">66.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-md-9</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">74.99%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-md-10</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">83.32%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-md-11</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">91.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-md-pull-1</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">8.33%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-md-pull-2</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">16.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-md-pull-3</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">24.99%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-md-pull-4</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">33.32%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-md-pull-5</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">41.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-md-pull-6</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">49.99%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-md-pull-7</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">58.32%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-md-pull-8</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">66.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-md-pull-9</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">74.99%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-md-pull-10</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">83.32%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-md-pull-11</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">91.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-md-push-1</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">8.33%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-md-push-2</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">16.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-md-push-3</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">24.99%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-md-push-4</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">33.32%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-md-push-5</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">41.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-md-push-6</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">49.99%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-md-push-7</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">58.32%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-md-push-8</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">66.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-md-push-9</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">74.99%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-md-push-10</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">83.32%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-md-push-11</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">91.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 1200px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>    <span class="token selector"><span class="token class">.col-lg-1</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">8.33%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-lg-2</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">16.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-lg-3</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">24.99%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-lg-4</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">33.32%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-lg-5</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">41.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-lg-6</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">49.99%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-lg-7</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">58.32%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-lg-8</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">66.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-lg-9</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">74.99%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-lg-10</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">83.32%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-lg-11</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">91.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-lg-pull-1</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">8.33%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-lg-pull-2</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">16.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-lg-pull-3</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">24.99%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-lg-pull-4</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">33.32%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-lg-pull-5</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">41.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-lg-pull-6</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">49.99%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-lg-pull-7</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">58.32%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-lg-pull-8</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">66.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-lg-pull-9</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">74.99%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-lg-pull-10</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">83.32%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-lg-pull-11</span></span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">91.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-lg-push-1</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">8.33%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-lg-push-2</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">16.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-lg-push-3</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">24.99%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-lg-push-4</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">33.32%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-lg-push-5</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">41.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-lg-push-6</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">49.99%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-lg-push-7</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">58.32%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-lg-push-8</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">66.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-lg-push-9</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">74.99%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-lg-push-10</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">83.32%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.col-lg-push-11</span></span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">91.65%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> Bootstrap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用户的创建、删除与修改</title>
      <link href="/categories/database/af86add3.html"/>
      <url>/categories/database/af86add3.html</url>
      
        <content type="html"><![CDATA[<h2 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h2><p>首先要进入我们的admin库中，进入方法是直接使用use admin 就可以。进入后可以使用show collections来查看数据库中的集合。默认是只有一个集合的（system.version）。<br>创建用户可以用db.createUser方法来完成</p><pre class=" language-js"><code class="language-js">db<span class="token punctuation">.</span><span class="token function">createUser</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    user<span class="token punctuation">:</span><span class="token string">"panpan"</span><span class="token punctuation">,</span>    pwd<span class="token punctuation">:</span><span class="token string">"123456"</span><span class="token punctuation">,</span>    customData<span class="token punctuation">:</span><span class="token punctuation">{</span>        name<span class="token punctuation">:</span><span class="token string">'潘潘'</span><span class="token punctuation">,</span>        email<span class="token punctuation">:</span><span class="token string">'211695630@qq.com'</span><span class="token punctuation">,</span>        age<span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    roles<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'read'</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>当然我们还可以单独配置一个数据库的权限，比如我们现在要配置compay数据库的权限为读写：</p><pre class=" language-js"><code class="language-js">db<span class="token punctuation">.</span><span class="token function">createUser</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    user<span class="token punctuation">:</span><span class="token string">"panpan"</span><span class="token punctuation">,</span>    pwd<span class="token punctuation">:</span><span class="token string">"123456"</span><span class="token punctuation">,</span>    customData<span class="token punctuation">:</span><span class="token punctuation">{</span>        name<span class="token punctuation">:</span><span class="token string">'潘潘'</span><span class="token punctuation">,</span>        email<span class="token punctuation">:</span><span class="token string">'211695630@qq.com'</span><span class="token punctuation">,</span>        age<span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    roles<span class="token punctuation">:</span><span class="token punctuation">[</span>        <span class="token punctuation">{</span>            role<span class="token punctuation">:</span><span class="token string">"readWrite"</span><span class="token punctuation">,</span>            db<span class="token punctuation">:</span><span class="token string">"company"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token string">'read'</span>    <span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>内置角色：<br>数据库用户角色：read、readWrite；<br>数据库管理角色：dbAdmin、dbOwner、userAdmin;<br>集群管理角色：clusterAdmin、clusterManager、clusterMonitor、hostManage；<br>备份恢复角色：backup、restore；<br>所有数据库角色：readAnyDatabase、readWriteAnyDatabase、userAdminAnyDatabase、dbAdminAnyDatabase<br>超级用户角色：root<br>内部角色：__system</p><h2 id="查找用户信息"><a href="#查找用户信息" class="headerlink" title="查找用户信息"></a>查找用户信息</h2><p>我们直接可以使用查找的方法，查找用户信息。命令很简单：</p><pre class=" language-bash"><code class="language-bash">db.system.users.find<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h2 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h2><p>删除用户也是非常简单，直接用remove就可以删除这个用户的信息和权限。</p><pre class=" language-bash"><code class="language-bash">db.system.users.remove<span class="token punctuation">(</span><span class="token punctuation">{</span>user:<span class="token string">"panpan"</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><h2 id="建权"><a href="#建权" class="headerlink" title="建权"></a>建权</h2><p>有时候我们要验证用户的用户名密码是否正确，就需要用到MongoDB提供的建权操作。也算是一种登录操作，不过MongoDB把这叫做建权。</p><pre class=" language-bash"><code class="language-bash">db.auth<span class="token punctuation">(</span><span class="token string">"panpan"</span>,<span class="token string">"123456"</span><span class="token punctuation">)</span></code></pre><p>如果正确返回1，如果错误返回0。（Error：Authentication failed。）</p><h2 id="启动建权"><a href="#启动建权" class="headerlink" title="启动建权"></a>启动建权</h2><p>重启MongoDB服务器，然后设置必须使用建权登录。</p><pre class=" language-bash"><code class="language-bash">mongod --auth</code></pre><p>启动后，用户登录只能用用户名和密码进行登录，原来的mongo形式连接已经不起作用了。相应的用户权限也对应妥当。实际项目中我们启动服务器必须使用建权形式。</p><h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><p>如果在配置用户之后，用户想登录，可以使用mongo的形式，不过需要配置用户名密码：</p><pre class=" language-bash"><code class="language-bash">mongo -u panpan -p 123456 127.0.0.1:27017/admin</code></pre><p>这时候我们就可以用给我们的权限对数据库操作了。</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>全文索引</title>
      <link href="/categories/database/3f39b042.html"/>
      <url>/categories/database/3f39b042.html</url>
      
        <content type="html"><![CDATA[<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>这节我们先建立一个集合（collections）-info，然后插入一小段文章，作用就是为建立全文索引提供数据，当然我们不再建立百万级数据，我们只是看一下效果。</p><pre class=" language-bash"><code class="language-bash">db.info.insert<span class="token punctuation">(</span><span class="token punctuation">{</span>contextInfo:<span class="token string">"I am a programmer, I love life, love family. Every day after work, I write a diary."</span><span class="token punctuation">}</span><span class="token punctuation">)</span>db.info.insert<span class="token punctuation">(</span><span class="token punctuation">{</span>contextInfo:<span class="token string">"I am a programmer, I love PlayGame, love drink. Every day after work, I playGame and drink."</span><span class="token punctuation">}</span></code></pre><p>当然这很简单，再次强调这只是文章需要，实际工作中这么简单的数据没必要建立全文索引。</p><h2 id="建立全文索引"><a href="#建立全文索引" class="headerlink" title="建立全文索引"></a>建立全文索引</h2><pre class=" language-bash"><code class="language-bash">db.info.ensureIndex<span class="token punctuation">(</span><span class="token punctuation">{</span>contextInfo:<span class="token string">'text'</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>需要注意的是这里使用text关键词来代表全文索引，我们在这里就不建立数据模型了。</p><h2 id="全文索引查找"><a href="#全文索引查找" class="headerlink" title="全文索引查找"></a>全文索引查找</h2><p>建立好了全文索引就可以查找了，查找时需要两个关键修饰符:</p><ul><li>$text:表示要在全文索引中查东西。</li><li>$search:后边跟查找的内容。</li></ul><pre class=" language-bash"><code class="language-bash">db.info.find<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token variable">$text</span>:<span class="token punctuation">{</span><span class="token variable">$search</span><span class="token keyword">:</span><span class="token string">"programmer"</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><h2 id="查找多个词"><a href="#查找多个词" class="headerlink" title="查找多个词"></a>查找多个词</h2><p>全文索引是支持多个次查找的，比如我们希望查找数据中有programmer，family，diary，drink的数据（这是或的关系），所以两条数据都会出现。</p><pre class=" language-bash"><code class="language-bash">db.info.find<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token variable">$text</span>:<span class="token punctuation">{</span><span class="token variable">$search</span><span class="token keyword">:</span><span class="token string">"programmer family diary drink"</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>如果我们这时候希望不查找出来有drink这个单词的记录，我们可以使用“-”减号来取消。</p><pre class=" language-bash"><code class="language-bash">db.info.find<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token variable">$text</span>:<span class="token punctuation">{</span><span class="token variable">$search</span><span class="token keyword">:</span><span class="token string">"programmer family diary -drink"</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><h2 id="转义符"><a href="#转义符" class="headerlink" title="转义符"></a>转义符</h2><p>全文搜索中是支持转义符的，比如我们想搜索的是两个词（love PlayGame和drink），这时候需要使用\斜杠来转意。</p><pre class=" language-bash"><code class="language-bash">db.info.find<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token variable">$text</span>:<span class="token punctuation">{</span><span class="token variable">$search</span><span class="token keyword">:</span><span class="token string">"\"love PlayGame\" drink"</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>复合索引</title>
      <link href="/categories/database/483e80d4.html"/>
      <url>/categories/database/483e80d4.html</url>
      
        <content type="html"><![CDATA[<h2 id="索引中的小坑"><a href="#索引中的小坑" class="headerlink" title="索引中的小坑"></a>索引中的小坑</h2><p>通过实际开发和性能对比，总结了几条不用索引的情况：</p><ul><li>数据不超万条时，不需要使用索引。性能的提升并不明显，而大大增加了内存和硬盘的消耗。</li><li>查询数据超过表数据量30%时，不要使用索引字段查询。实际证明会比不使用索引更慢，因为它大量检索了索引表和我们原表。</li><li>数字索引，要比字符串索引快的多，在百万级甚至千万级数据量面前，使用数字索引是个明智的选择。</li><li>把你经常查询的数据做成一个内嵌数据（对象型的数据），然后集体进行索引。</li></ul><h2 id="复合索引"><a href="#复合索引" class="headerlink" title="复合索引"></a>复合索引</h2><p>复合索引就是两条以上的索引,之前我们已经把username字段建立了索引，我们现在把randNum0这个字段也设置成索引。</p><pre class=" language-bash"><code class="language-bash">db.randInfo.ensureIndex<span class="token punctuation">(</span><span class="token punctuation">{</span>randNum0:1<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>建立好后，我们再用查询索引状态命令进行查询。</p><pre class=" language-bash"><code class="language-bash">db.randInfo.getIndexes<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>这时候已经是两个自建索引了，一共有三个索引。</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>        <span class="token punctuation">{</span>                <span class="token string">"v"</span> <span class="token keyword">:</span> 2,                <span class="token string">"key"</span> <span class="token keyword">:</span> <span class="token punctuation">{</span>                        <span class="token string">"_id"</span> <span class="token keyword">:</span> 1                <span class="token punctuation">}</span>,                <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"_id_"</span>,                <span class="token string">"ns"</span> <span class="token keyword">:</span> <span class="token string">"company.randInfo"</span>        <span class="token punctuation">}</span>,        <span class="token punctuation">{</span>                <span class="token string">"v"</span> <span class="token keyword">:</span> 2,                <span class="token string">"key"</span> <span class="token keyword">:</span> <span class="token punctuation">{</span>                        <span class="token string">"username"</span> <span class="token keyword">:</span> 1                <span class="token punctuation">}</span>,                <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"username_1"</span>,                <span class="token string">"ns"</span> <span class="token keyword">:</span> <span class="token string">"company.randInfo"</span>        <span class="token punctuation">}</span>,        <span class="token punctuation">{</span>                <span class="token string">"v"</span> <span class="token keyword">:</span> 2,                <span class="token string">"key"</span> <span class="token keyword">:</span> <span class="token punctuation">{</span>                        <span class="token string">"randNum0"</span> <span class="token keyword">:</span> 1                <span class="token punctuation">}</span>,                <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"randNum0_1"</span>,                <span class="token string">"ns"</span> <span class="token keyword">:</span> <span class="token string">"company.randInfo"</span>        <span class="token punctuation">}</span><span class="token punctuation">]</span></code></pre><h2 id="两个索引同时查询"><a href="#两个索引同时查询" class="headerlink" title="两个索引同时查询"></a>两个索引同时查询</h2><p>我们同时查询两个索引的值，看看效果是怎么样的。</p><pre class=" language-js"><code class="language-js"><span class="token keyword">var</span> startTime<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> db <span class="token operator">=</span> <span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">'company'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span>  rs<span class="token operator">=</span> db<span class="token punctuation">.</span>randInfo<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>username<span class="token punctuation">:</span><span class="token string">'gu7v2dtb'</span><span class="token punctuation">,</span>randNum0<span class="token punctuation">:</span><span class="token number">565509</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>rs<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>rs<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span><span class="token function">printjson</span><span class="token punctuation">(</span>rs<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> runTime <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>startTime<span class="token punctuation">;</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">'[Demo]this run time is '</span><span class="token operator">+</span>runTime<span class="token operator">+</span><span class="token string">'ms'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>从性能上看并没有什么特殊的变化，查询时间还是在4ms左右。MongoDB的复合查询是按照我们的索引顺序进行查询的。就是我们用db.randInfo.getIndexes()查询出的数组。</p><h2 id="指定索引查询（hint）"><a href="#指定索引查询（hint）" class="headerlink" title="指定索引查询（hint）"></a>指定索引查询（hint）</h2><p>数字的索引要比字符串的索引快，这就需要一个方法来打破索引表的查询顺序，用我们自己指定的索引优先查询，这个方法就是hint().</p><pre class=" language-js"><code class="language-js"><span class="token keyword">var</span> rs<span class="token operator">=</span> db<span class="token punctuation">.</span>randInfo<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>username<span class="token punctuation">:</span><span class="token string">'gu7v2dtb'</span><span class="token punctuation">,</span>randNum0<span class="token punctuation">:</span><span class="token number">565509</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hint</span><span class="token punctuation">(</span><span class="token punctuation">{</span>randNum0<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>由于数据量和复杂成都还是不大，所以看不出来明显的性能提升，等工作中遇到大数据时，一定会得到很好的效果的。</p><h2 id="删除索引"><a href="#删除索引" class="headerlink" title="删除索引"></a>删除索引</h2><p>当索引性能不佳或起不到作用时，我们需要删除索引，删除索引的命令是dropIndex().</p><pre class=" language-bash"><code class="language-bash">db.randInfo.dropIndex<span class="token punctuation">(</span><span class="token string">'randNum0_1'</span><span class="token punctuation">)</span> //索引的唯一ID</code></pre><blockquote><p>这里需要注意的是删除时填写的值，并不是我们的字段名称（key），而是我们索引查询表中的name值。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>索引入门</title>
      <link href="/categories/database/d137d16e.html"/>
      <url>/categories/database/d137d16e.html</url>
      
        <content type="html"><![CDATA[<h2 id="普通查询性能"><a href="#普通查询性能" class="headerlink" title="普通查询性能"></a>普通查询性能</h2><p>我们先制作一个普通查询，随便查找一个用户名，并计算出查询和打印的时间，因为有200万条数据，所以性能不会很高。</p><pre class=" language-js"><code class="language-js"><span class="token keyword">var</span> startTime <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//得到程序运行的开始时间</span><span class="token keyword">var</span> db <span class="token operator">=</span> <span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">'company'</span><span class="token punctuation">)</span>          <span class="token comment" spellcheck="true">//链接数据库</span><span class="token keyword">var</span> rs<span class="token operator">=</span>db<span class="token punctuation">.</span>randInfo<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>username<span class="token punctuation">:</span><span class="token string">"gu7v2dtb"</span><span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//根据用户名查找用户</span>rs<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>rs<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span><span class="token function">printjson</span><span class="token punctuation">(</span>rs<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>                     <span class="token comment" spellcheck="true">//循环输出</span><span class="token keyword">var</span> runTime <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>startTime<span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">//得到程序运行时间</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">'[SUCCESS]This run time is:'</span><span class="token operator">+</span>runTime<span class="token operator">+</span><span class="token string">'ms'</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">//打印出运行时间</span></code></pre><p>上边的代码就是一个普通的查询，只不过是记录了时间。在终端运行后，可以得到大概的运行时间是0.8秒左右（电脑性能不同，有所不同），第一次无缓存的运行时间大概是3.5秒左右。这个时间是没办法满足我们的日常查询的。</p><h2 id="建立索引"><a href="#建立索引" class="headerlink" title="建立索引"></a>建立索引</h2><p>试着为用户名（username）建立索引。建立索引只需要一句话就可以了。</p><pre class=" language-bash"><code class="language-bash">db.randInfo.ensureIndex<span class="token punctuation">(</span><span class="token punctuation">{</span>username:1<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>查看现有索引</p><pre class=" language-bash"><code class="language-bash">db.randInfo.getIndexes<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>终端的结果，现在只有一个索引值:</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>    <span class="token punctuation">{</span>        <span class="token string">"v"</span> <span class="token keyword">:</span> 2,        <span class="token string">"key"</span> <span class="token keyword">:</span> <span class="token punctuation">{</span>                <span class="token string">"_id"</span> <span class="token keyword">:</span> 1        <span class="token punctuation">}</span>,        <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"_id_"</span>,        <span class="token string">"ns"</span> <span class="token keyword">:</span> <span class="token string">"company.randInfo"</span>    <span class="token punctuation">}</span><span class="token punctuation">]</span></code></pre><p>那现在使用命令建立一下索引db.randomInfo.ensureIndex({uername:1})，我的电脑大概要50秒左右，建立好后我们重新使用db.randomInfo.getIndexes()，查看一下结果。</p><p>结果如下：已经变成了两条索引。</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>    <span class="token punctuation">{</span>        <span class="token string">"v"</span> <span class="token keyword">:</span> 2,        <span class="token string">"key"</span> <span class="token keyword">:</span> <span class="token punctuation">{</span>                <span class="token string">"_id"</span> <span class="token keyword">:</span> 1        <span class="token punctuation">}</span>,        <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"_id_"</span>,        <span class="token string">"ns"</span> <span class="token keyword">:</span> <span class="token string">"company.randInfo"</span>    <span class="token punctuation">}</span>,    <span class="token punctuation">{</span>        <span class="token string">"v"</span> <span class="token keyword">:</span> 2,        <span class="token string">"key"</span> <span class="token keyword">:</span> <span class="token punctuation">{</span>                <span class="token string">"username"</span> <span class="token keyword">:</span> 1        <span class="token punctuation">}</span>,        <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"uername_1"</span>,        <span class="token string">"ns"</span> <span class="token keyword">:</span> <span class="token string">"company.randInfo"</span>    <span class="token punctuation">}</span><span class="token punctuation">]</span></code></pre><p>然后我们再来load一下demo09.js文件（load(‘./demo09.js’)），看一下现在多少秒可以查询出来。这时候查询的时间缩短到了4ms左右，查询性能提升了大概200倍左右。</p><blockquote><p>总结：无论是在关系型数据库还是文档数据库，建立索引都是非常重要的。前边讲了，索引这东西是要消耗硬盘和内存资源的，所以还是要根据程序需要进行建立了。MongoDB也给我们进行了限制，只允许我们建立64个索引值。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MongoDB构造百万级数据</title>
      <link href="/categories/database/a630e1f8.html"/>
      <url>/categories/database/a630e1f8.html</url>
      
        <content type="html"><![CDATA[<h2 id="制作随机数方法"><a href="#制作随机数方法" class="headerlink" title="制作随机数方法"></a>制作随机数方法</h2><p>我们要想生成一个百万级的数据集合，必须要有随机数的参与，我们需要写一个随机数的方法。下面的代码，创建了一个随机数方法。</p><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">//生成随机数</span><span class="token keyword">function</span> <span class="token function">GetRandomNum</span><span class="token punctuation">(</span>min<span class="token punctuation">,</span>max<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">let</span> range <span class="token operator">=</span> max<span class="token operator">-</span>min<span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//得到随机数区间</span>    <span class="token keyword">let</span> rand <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//得到随机值</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>min <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>rand <span class="token operator">*</span>range<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//最小值+随机数取整</span><span class="token punctuation">}</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token function">GetRandomNum</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">,</span><span class="token number">99999</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="制作随机用户名"><a href="#制作随机用户名" class="headerlink" title="制作随机用户名"></a>制作随机用户名</h2><p>有了随机数的方法，我们就可以制作一个随机生成的用户名。目的是存在不同的用户名，方便我们测试查询速度。</p><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">//生成随机数</span><span class="token keyword">function</span> <span class="token function">GetRandomNum</span><span class="token punctuation">(</span>min<span class="token punctuation">,</span>max<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">let</span> range <span class="token operator">=</span> max<span class="token operator">-</span>min<span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//得到随机数区间</span>    <span class="token keyword">let</span> rand <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//得到随机值</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>min <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>rand <span class="token operator">*</span>range<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//最小值+随机数取整</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//print(GetRandomNum(10000,99999));</span><span class="token comment" spellcheck="true">//生成随机用户名</span><span class="token keyword">function</span> <span class="token function">GetRadomUserName</span><span class="token punctuation">(</span>min<span class="token punctuation">,</span>max<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">let</span> tempStringArray<span class="token operator">=</span> <span class="token string">"123456789qwertyuiopasdfghjklzxcvbnm"</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//构造生成时的字母库数组</span>    <span class="token keyword">let</span> outPuttext <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//最后输出的变量</span>    <span class="token comment" spellcheck="true">//进行循环，随机生产用户名的长度，这里需要生成随机数方法的配合</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">1</span> <span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token function">GetRandomNum</span><span class="token punctuation">(</span>min<span class="token punctuation">,</span>max<span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//随机抽取字母，拼装成需要的用户名</span>        outPuttext<span class="token operator">=</span>outPuttext<span class="token operator">+</span>tempStringArray<span class="token punctuation">[</span><span class="token function">GetRandomNum</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>tempStringArray<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">]</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> outPuttext<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token function">GetRadomUserName</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><h2 id="插入200万数据"><a href="#插入200万数据" class="headerlink" title="插入200万数据"></a>插入200万数据</h2><p>有了生成随机数和随机用户名的方法，就可以生产百万级数据了。</p><pre class=" language-js"><code class="language-js"><span class="token keyword">var</span> db <span class="token operator">=</span> <span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">'company'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>db<span class="token punctuation">.</span>randomInfo<span class="token punctuation">.</span><span class="token function">drop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> tempInfo <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">2000000</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    tempInfo<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        username<span class="token punctuation">:</span><span class="token function">GetRadomUserName</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        regeditTime<span class="token punctuation">:</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        randNum0<span class="token punctuation">:</span><span class="token function">GetRandomNum</span><span class="token punctuation">(</span><span class="token number">100000</span><span class="token punctuation">,</span><span class="token number">999999</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        randNum1<span class="token punctuation">:</span><span class="token function">GetRandomNum</span><span class="token punctuation">(</span><span class="token number">100000</span><span class="token punctuation">,</span><span class="token number">999999</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        randNum2<span class="token punctuation">:</span><span class="token function">GetRandomNum</span><span class="token punctuation">(</span><span class="token number">100000</span><span class="token punctuation">,</span><span class="token number">999999</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        randNum3<span class="token punctuation">:</span><span class="token function">GetRandomNum</span><span class="token punctuation">(</span><span class="token number">100000</span><span class="token punctuation">,</span><span class="token number">999999</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        randNum4<span class="token punctuation">:</span><span class="token function">GetRandomNum</span><span class="token punctuation">(</span><span class="token number">100000</span><span class="token punctuation">,</span><span class="token number">999999</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        randNum5<span class="token punctuation">:</span><span class="token function">GetRandomNum</span><span class="token punctuation">(</span><span class="token number">100000</span><span class="token punctuation">,</span><span class="token number">999999</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        randNum6<span class="token punctuation">:</span><span class="token function">GetRandomNum</span><span class="token punctuation">(</span><span class="token number">100000</span><span class="token punctuation">,</span><span class="token number">999999</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        randNum7<span class="token punctuation">:</span><span class="token function">GetRandomNum</span><span class="token punctuation">(</span><span class="token number">100000</span><span class="token punctuation">,</span><span class="token number">999999</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        randNum8<span class="token punctuation">:</span><span class="token function">GetRandomNum</span><span class="token punctuation">(</span><span class="token number">100000</span><span class="token punctuation">,</span><span class="token number">999999</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        randNum8<span class="token punctuation">:</span><span class="token function">GetRandomNum</span><span class="token punctuation">(</span><span class="token number">100000</span><span class="token punctuation">,</span><span class="token number">999999</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>db<span class="token punctuation">.</span>randomInfo<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>tempInfo<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>这个过程可能2-3分钟，根据自己的电脑配置不同，会有差别。<br>插入完成后，我们可以使用 <code>db.randomInfo.stats()</code> 这个命令查看数据中的数据条数。</p><h2 id="全部代码"><a href="#全部代码" class="headerlink" title="全部代码"></a>全部代码</h2><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">//生成随机数</span><span class="token keyword">function</span> <span class="token function">GetRandomNum</span><span class="token punctuation">(</span>min<span class="token punctuation">,</span>max<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">let</span> range <span class="token operator">=</span> max<span class="token operator">-</span>min<span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//得到随机数区间</span>    <span class="token keyword">let</span> rand <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//得到随机值</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>min <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>rand <span class="token operator">*</span>range<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//最小值+随机数取整</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// print(GetRandomNum(10000,99999));</span><span class="token comment" spellcheck="true">//生成随机用户名</span><span class="token keyword">function</span> <span class="token function">GetRadomUserName</span><span class="token punctuation">(</span>min<span class="token punctuation">,</span>max<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">let</span> tempStringArray<span class="token operator">=</span> <span class="token string">"123456789qwertyuiopasdfghjklzxcvbnm"</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//构造生成时的字母库数组</span>    <span class="token keyword">let</span> outPuttext <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//最后输出的变量</span>    <span class="token comment" spellcheck="true">//进行循环，随机生产用户名的长度，这里需要生成随机数方法的配合</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">1</span> <span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token function">GetRandomNum</span><span class="token punctuation">(</span>min<span class="token punctuation">,</span>max<span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//随机抽取字母，拼装成需要的用户名</span>        outPuttext<span class="token operator">=</span>outPuttext<span class="token operator">+</span>tempStringArray<span class="token punctuation">[</span><span class="token function">GetRandomNum</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>tempStringArray<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">]</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> outPuttext<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// print(GetRadomUserName(7,16))</span><span class="token comment" spellcheck="true">// var startTime=(new Date()).getTime();</span><span class="token keyword">var</span> db <span class="token operator">=</span> <span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">'company'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>db<span class="token punctuation">.</span>randomInfo<span class="token punctuation">.</span><span class="token function">drop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span>  tempInfo <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">2000000</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    tempInfo<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        username<span class="token punctuation">:</span><span class="token function">GetRadomUserName</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        regeditTime<span class="token punctuation">:</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        randNum0<span class="token punctuation">:</span><span class="token function">GetRandomNum</span><span class="token punctuation">(</span><span class="token number">100000</span><span class="token punctuation">,</span><span class="token number">999999</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        randNum1<span class="token punctuation">:</span><span class="token function">GetRandomNum</span><span class="token punctuation">(</span><span class="token number">100000</span><span class="token punctuation">,</span><span class="token number">999999</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        randNum2<span class="token punctuation">:</span><span class="token function">GetRandomNum</span><span class="token punctuation">(</span><span class="token number">100000</span><span class="token punctuation">,</span><span class="token number">999999</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        randNum3<span class="token punctuation">:</span><span class="token function">GetRandomNum</span><span class="token punctuation">(</span><span class="token number">100000</span><span class="token punctuation">,</span><span class="token number">999999</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        randNum4<span class="token punctuation">:</span><span class="token function">GetRandomNum</span><span class="token punctuation">(</span><span class="token number">100000</span><span class="token punctuation">,</span><span class="token number">999999</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        randNum5<span class="token punctuation">:</span><span class="token function">GetRandomNum</span><span class="token punctuation">(</span><span class="token number">100000</span><span class="token punctuation">,</span><span class="token number">999999</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        randNum6<span class="token punctuation">:</span><span class="token function">GetRandomNum</span><span class="token punctuation">(</span><span class="token number">100000</span><span class="token punctuation">,</span><span class="token number">999999</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        randNum7<span class="token punctuation">:</span><span class="token function">GetRandomNum</span><span class="token punctuation">(</span><span class="token number">100000</span><span class="token punctuation">,</span><span class="token number">999999</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        randNum8<span class="token punctuation">:</span><span class="token function">GetRandomNum</span><span class="token punctuation">(</span><span class="token number">100000</span><span class="token punctuation">,</span><span class="token number">999999</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        randNum8<span class="token punctuation">:</span><span class="token function">GetRandomNum</span><span class="token punctuation">(</span><span class="token number">100000</span><span class="token punctuation">,</span><span class="token number">999999</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>db<span class="token punctuation">.</span>randomInfo<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>tempInfo<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>find如何在js文本中使用</title>
      <link href="/categories/database/3854745b.html"/>
      <url>/categories/database/3854745b.html</url>
      
        <content type="html"><![CDATA[<h2 id="hasNext循环结果"><a href="#hasNext循环结果" class="headerlink" title="hasNext循环结果"></a>hasNext循环结果</h2><p>想在文本中执行我们的find语句要用到游标和循环的操作，先看一下代码。</p><pre class=" language-js"><code class="language-js"><span class="token keyword">var</span> db <span class="token operator">=</span> <span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">"company"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//进行链接对应的集合collections</span><span class="token keyword">var</span> result <span class="token operator">=</span> db<span class="token punctuation">.</span>workmate<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//声明变量result，并把查询结果赋值给result</span><span class="token comment" spellcheck="true">//利用游标的hasNext()进行循环输出结果。</span><span class="token keyword">while</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">printjson</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//用json格式打印结果</span><span class="token punctuation">}</span></code></pre><p>写完后，现在你只需要在终端中进行load()就可以执行了，再也不用麻烦的复制粘贴了。</p><h2 id="forEach循环"><a href="#forEach循环" class="headerlink" title="forEach循环"></a>forEach循环</h2><p>利用hasNext循环结果，需要借助while的帮助，MongoDB也为我们提供了forEach循环，现在修改上边的代码，使用forEach循环来输出结果。</p><pre class=" language-js"><code class="language-js"><span class="token keyword">var</span> db <span class="token operator">=</span> <span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">"company"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//进行链接对应的集合collections</span><span class="token keyword">var</span> result <span class="token operator">=</span> db<span class="token punctuation">.</span>workmate<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//声明变量result，并把查询结果赋值给result</span><span class="token comment" spellcheck="true">//利用游标的hasNext()进行循环输出结果。</span>result<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">printjson</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>作为个人觉得forEach循环更为优雅。这两种方法都是非常不错的,凭借自己爱好进行选择吧。</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>find的参数使用方法</title>
      <link href="/categories/database/4f5344cd.html"/>
      <url>/categories/database/4f5344cd.html</url>
      
        <content type="html"><![CDATA[<h2 id="find参数"><a href="#find参数" class="headerlink" title="find参数"></a>find参数</h2><ul><li>query: 查询条件，MongoDB默认的第一个参数。</li><li>fields: （返回内容）查询出来后显示的结果样式，可以用true和false控制是否显示。</li><li>limit: 返回的数量，后边跟数字，控制每次查询返回的结果数量。</li><li>skip: 跳过多少个显示，和limit结合可以实现分页。</li><li>sort: 排序方式，从小到大排序使用1，从大到小排序使用-1。</li></ul><h2 id="分页Demo"><a href="#分页Demo" class="headerlink" title="分页Demo"></a>分页Demo</h2><p>明白了上面这些选项，现在可以作一个最简单的分页，我们把同事集合（collections）进行分页，每页显示两个，并且按照年龄从小到大的顺序排列。</p><pre class=" language-bash"><code class="language-bash">db.workmate.find<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span>name:true,age:true,_id:false<span class="token punctuation">}</span><span class="token punctuation">)</span>.limit<span class="token punctuation">(</span>0<span class="token punctuation">)</span>.skip<span class="token punctuation">(</span>2<span class="token punctuation">)</span>.sort<span class="token punctuation">(</span><span class="token punctuation">{</span>age:1<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="where修饰符"><a href="#where修饰符" class="headerlink" title="$where修饰符"></a>$where修饰符</h2><p>它是一个非常强大的修饰符，但强大的背后也意味着有风险存在。它可以让我们在条件里使用javascript的方法来进行复杂查询。我们先来看一个最简单的例子，现在要查询年龄大于25岁的人员。</p><pre class=" language-bash"><code class="language-bash">db.workmate.find<span class="token punctuation">(</span>    <span class="token punctuation">{</span><span class="token variable">$where</span><span class="token keyword">:</span><span class="token string">"this.age>25"</span><span class="token punctuation">}</span>,    <span class="token punctuation">{</span>name:true,age:true,_id:false<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>这里的this指向的是workmate（查询集合）本身。这样我们就可以在程序中随意调用。虽然强大和灵活，但是这种查询对于数据库的压力和安全性都会变重，所以在工作中尽量减少$where修饰符的使用。</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>find的数组查询</title>
      <link href="/categories/database/d65a1577.html"/>
      <url>/categories/database/d65a1577.html</url>
      
        <content type="html"><![CDATA[<h2 id="完善数据"><a href="#完善数据" class="headerlink" title="完善数据"></a>完善数据</h2><p>以前的我们的workmate集合对数组涉及还很少，现在在数据中加入了兴趣（interest），并且给每个人加入了一些兴趣，比如有写代码，做饭，看电影…..</p><pre class=" language-js"><code class="language-js"><span class="token keyword">var</span> workmate1<span class="token operator">=</span><span class="token punctuation">{</span>    name<span class="token punctuation">:</span><span class="token string">'panpan'</span><span class="token punctuation">,</span>    age<span class="token punctuation">:</span><span class="token number">24</span><span class="token punctuation">,</span>    sex<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span>    job<span class="token punctuation">:</span><span class="token string">'前端'</span><span class="token punctuation">,</span>    skill<span class="token punctuation">:</span><span class="token punctuation">{</span>        skillOne<span class="token punctuation">:</span><span class="token string">'HTML+CSS'</span><span class="token punctuation">,</span>        SkillTwo<span class="token punctuation">:</span><span class="token string">'JavaScript'</span><span class="token punctuation">,</span>        SkillThree<span class="token punctuation">:</span><span class="token string">'PHP'</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    regeditTime<span class="token punctuation">:</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    interest<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'看电影'</span><span class="token punctuation">,</span><span class="token string">'看书'</span><span class="token punctuation">,</span><span class="token string">'美食'</span><span class="token punctuation">,</span><span class="token string">'钓鱼'</span><span class="token punctuation">,</span><span class="token string">'旅游'</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token keyword">var</span> workmate2<span class="token operator">=</span><span class="token punctuation">{</span>    name<span class="token punctuation">:</span><span class="token string">'panda'</span><span class="token punctuation">,</span>    age<span class="token punctuation">:</span><span class="token number">20</span><span class="token punctuation">,</span>    sex<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span>    job<span class="token punctuation">:</span><span class="token string">'JAVA后端'</span><span class="token punctuation">,</span>    skill<span class="token punctuation">:</span><span class="token punctuation">{</span>        skillOne<span class="token punctuation">:</span><span class="token string">'HTML+CSS'</span><span class="token punctuation">,</span>        SkillTwo<span class="token punctuation">:</span><span class="token string">'J2EE'</span><span class="token punctuation">,</span>        SkillThree<span class="token punctuation">:</span><span class="token string">'PPT'</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    regeditTime<span class="token punctuation">:</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    interest<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'篮球'</span><span class="token punctuation">,</span><span class="token string">'看电影'</span><span class="token punctuation">,</span><span class="token string">'做饭'</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token keyword">var</span> workmate3<span class="token operator">=</span><span class="token punctuation">{</span>    name<span class="token punctuation">:</span><span class="token string">'jspan'</span><span class="token punctuation">,</span>    age<span class="token punctuation">:</span><span class="token number">20</span><span class="token punctuation">,</span>    sex<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span>    job<span class="token punctuation">:</span><span class="token string">'UI设计'</span><span class="token punctuation">,</span>    skill<span class="token punctuation">:</span><span class="token punctuation">{</span>        skillOne<span class="token punctuation">:</span><span class="token string">'PhotoShop'</span><span class="token punctuation">,</span>        SkillTwo<span class="token punctuation">:</span><span class="token string">'UI'</span><span class="token punctuation">,</span>        SkillThree<span class="token punctuation">:</span><span class="token string">'Word+Excel+PPT'</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    regeditTime<span class="token punctuation">:</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    interest<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'做饭'</span><span class="token punctuation">,</span><span class="token string">'画画'</span><span class="token punctuation">,</span><span class="token string">'看电影'</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token keyword">var</span> workmate4<span class="token operator">=</span><span class="token punctuation">{</span>    name<span class="token punctuation">:</span><span class="token string">'xiaowang'</span><span class="token punctuation">,</span>    age<span class="token punctuation">:</span><span class="token number">26</span><span class="token punctuation">,</span>    sex<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span>    job<span class="token punctuation">:</span><span class="token string">'UI设计'</span><span class="token punctuation">,</span>    skill<span class="token punctuation">:</span><span class="token punctuation">{</span>        skillOne<span class="token punctuation">:</span><span class="token string">'PhotoShop'</span><span class="token punctuation">,</span>        SkillTwo<span class="token punctuation">:</span><span class="token string">'UI'</span><span class="token punctuation">,</span>        SkillThree<span class="token punctuation">:</span><span class="token string">'Word+Excel+PPT'</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    regeditTime<span class="token punctuation">:</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    interest<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'画画'</span><span class="token punctuation">,</span><span class="token string">'聚会'</span><span class="token punctuation">,</span><span class="token string">'看电影'</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token keyword">var</span> db<span class="token operator">=</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">'company'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> workmateArray<span class="token operator">=</span><span class="token punctuation">[</span>workmate1<span class="token punctuation">,</span>workmate2<span class="token punctuation">,</span>workmate3<span class="token punctuation">,</span>workmate4<span class="token punctuation">]</span><span class="token punctuation">;</span>db<span class="token punctuation">.</span>workmate<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>workmateArray<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">'[SUCCESS]：The data was inserted successfully'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="基本数组查询"><a href="#基本数组查询" class="headerlink" title="基本数组查询"></a>基本数组查询</h2><p>比如现在我们知道了一个人的爱好是’画画’,’聚会’,’看电影’，但我们不知道是谁，这时候我们就可以使用最简单的数组查询（实际工作中，这种情况基本不常用，所以这种查询只作知识点储备就可以了）。</p><pre class=" language-bash"><code class="language-bash">db.workmate.find<span class="token punctuation">(</span><span class="token punctuation">{</span>interest:<span class="token punctuation">[</span><span class="token string">'画画'</span>,<span class="token string">'聚会'</span>,<span class="token string">'看电影'</span><span class="token punctuation">]</span><span class="token punctuation">}</span>,    <span class="token punctuation">{</span>name:1,interest:1,age:1,_id:0<span class="token punctuation">}</span> <span class="token punctuation">)</span></code></pre><p>结果为：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">{</span> <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"xiaowang"</span>, <span class="token string">"age"</span> <span class="token keyword">:</span> 26, <span class="token string">"interest"</span> <span class="token keyword">:</span> <span class="token punctuation">[</span> <span class="token string">"画画"</span>, <span class="token string">"聚会"</span>, <span class="token string">"看电影"</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span></code></pre><p>这时候我们说，想查出看兴趣中有看电影的员工信息。按照正常逻辑，应该使用下面的代码。</p><pre class=" language-bash"><code class="language-bash">db.workmate.find<span class="token punctuation">(</span><span class="token punctuation">{</span>interest:<span class="token punctuation">[</span><span class="token string">'看电影'</span><span class="token punctuation">]</span><span class="token punctuation">}</span>,    <span class="token punctuation">{</span>name:1,interest:1,age:1,_id:0<span class="token punctuation">}</span> <span class="token punctuation">)</span></code></pre><p>运行后，并没有如我们所愿得到相应的人员数据，数据为空。那问题出现在哪里？问题就在于我们写了一个中括号([]),因为加上中括号就相当于完全匹配了，所以没有得到一条符合查询条件的数据。我们去掉中括号再看看结果。</p><pre class=" language-bash"><code class="language-bash">db.workmate.find<span class="token punctuation">(</span><span class="token punctuation">{</span>interest:<span class="token string">'看电影'</span><span class="token punctuation">}</span>,    <span class="token punctuation">{</span>name:1,interest:1,age:1,_id:0<span class="token punctuation">}</span> <span class="token punctuation">)</span></code></pre><p>结果为：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">{</span> <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"panpan"</span>, <span class="token string">"age"</span> <span class="token keyword">:</span> 24, <span class="token string">"interest"</span> <span class="token keyword">:</span> <span class="token punctuation">[</span> <span class="token string">"看电影"</span>, <span class="token string">"看书"</span>, <span class="token string">"美食"</span>, <span class="token string">"钓鱼"</span>, <span class="token string">"旅游"</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">{</span> <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"panda"</span>, <span class="token string">"age"</span> <span class="token keyword">:</span> 20, <span class="token string">"interest"</span> <span class="token keyword">:</span> <span class="token punctuation">[</span> <span class="token string">"篮球"</span>, <span class="token string">"看电影"</span>, <span class="token string">"做饭"</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">{</span> <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"jspan"</span>, <span class="token string">"age"</span> <span class="token keyword">:</span> 20, <span class="token string">"interest"</span> <span class="token keyword">:</span> <span class="token punctuation">[</span> <span class="token string">"做饭"</span>, <span class="token string">"画画"</span>, <span class="token string">"看电影"</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">{</span> <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"xiaowang"</span>, <span class="token string">"age"</span> <span class="token keyword">:</span> 26, <span class="token string">"interest"</span> <span class="token keyword">:</span> <span class="token punctuation">[</span> <span class="token string">"画画"</span>, <span class="token string">"聚会"</span>, <span class="token string">"看电影"</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span></code></pre><p>这就是我们在数组中查询一项的方法，这也是数组查询的最简单用法。</p><h2 id="all-数组多项查询"><a href="#all-数组多项查询" class="headerlink" title="$all-数组多项查询"></a>$all-数组多项查询</h2><p>现在我们的条件升级了，要查询出喜欢看电影和看书的人员信息，也就是对数组中的对象进行查询，这时候要用到一个新的查询修饰符$all。看下面的例子：</p><pre class=" language-bash"><code class="language-bash">db.workmate.find<span class="token punctuation">(</span>    <span class="token punctuation">{</span>interest:<span class="token punctuation">{</span><span class="token variable">$all</span>:<span class="token punctuation">[</span><span class="token string">"看电影"</span>,<span class="token string">"看书"</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,    <span class="token punctuation">{</span>name:1,interest:1,age:1,_id:0<span class="token punctuation">}</span> <span class="token punctuation">)</span></code></pre><p>结果为：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">{</span> <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"panpan"</span>, <span class="token string">"age"</span> <span class="token keyword">:</span> 24, <span class="token string">"interest"</span> <span class="token keyword">:</span> <span class="token punctuation">[</span> <span class="token string">"看电影"</span>, <span class="token string">"看书"</span>, <span class="token string">"美食"</span>, <span class="token string">"钓鱼"</span>, <span class="token string">"旅游"</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span></code></pre><p>这时候找到了兴趣中既有看电影又有看书的人员。</p><h2 id="in-数组的或者查询"><a href="#in-数组的或者查询" class="headerlink" title="$in-数组的或者查询"></a>$in-数组的或者查询</h2><p>用$all修饰符，是需要满足所有条件的，$in主要满足数组中的一项就可以被查出来（有时候会跟$or弄混）。比如现在要查询爱好中有看电影的或者看书的员工信息。</p><pre class=" language-bash"><code class="language-bash">db.workmate.find<span class="token punctuation">(</span>    <span class="token punctuation">{</span>interest:<span class="token punctuation">{</span><span class="token variable">$in</span>:<span class="token punctuation">[</span><span class="token string">"看电影"</span>,<span class="token string">"看书"</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,    <span class="token punctuation">{</span>name:1,interest:1,age:1,_id:0<span class="token punctuation">}</span> <span class="token punctuation">)</span></code></pre><p>结果为：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">{</span> <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"panpan"</span>, <span class="token string">"age"</span> <span class="token keyword">:</span> 24, <span class="token string">"interest"</span> <span class="token keyword">:</span> <span class="token punctuation">[</span> <span class="token string">"看电影"</span>, <span class="token string">"看书"</span>, <span class="token string">"美食"</span>, <span class="token string">"钓鱼"</span>, <span class="token string">"旅游"</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">{</span> <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"panda"</span>, <span class="token string">"age"</span> <span class="token keyword">:</span> 20, <span class="token string">"interest"</span> <span class="token keyword">:</span> <span class="token punctuation">[</span> <span class="token string">"篮球"</span>, <span class="token string">"看电影"</span>, <span class="token string">"做饭"</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">{</span> <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"jspan"</span>, <span class="token string">"age"</span> <span class="token keyword">:</span> 20, <span class="token string">"interest"</span> <span class="token keyword">:</span> <span class="token punctuation">[</span> <span class="token string">"做饭"</span>, <span class="token string">"画画"</span>, <span class="token string">"看电影"</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">{</span> <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"xiaowang"</span>, <span class="token string">"age"</span> <span class="token keyword">:</span> 26, <span class="token string">"interest"</span> <span class="token keyword">:</span> <span class="token punctuation">[</span> <span class="token string">"画画"</span>, <span class="token string">"聚会"</span>, <span class="token string">"看电影"</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span></code></pre><h2 id="size-数组个数查询"><a href="#size-数组个数查询" class="headerlink" title="$size-数组个数查询"></a>$size-数组个数查询</h2><p>$size修饰符可以根据数组的数量查询出结果。比如现在我们要查找兴趣的数量是5个人员信息，这时候就可以使用$size。</p><pre class=" language-bash"><code class="language-bash">db.workmate.find<span class="token punctuation">(</span>    <span class="token punctuation">{</span>interest:<span class="token punctuation">{</span><span class="token variable">$size</span>:5<span class="token punctuation">}</span><span class="token punctuation">}</span>,    <span class="token punctuation">{</span>name:1,interest:1,age:1,_id:0<span class="token punctuation">}</span> <span class="token punctuation">)</span></code></pre><p>结果为：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">{</span> <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"panpan"</span>, <span class="token string">"age"</span> <span class="token keyword">:</span> 24, <span class="token string">"interest"</span> <span class="token keyword">:</span> <span class="token punctuation">[</span> <span class="token string">"看电影"</span>, <span class="token string">"看书"</span>, <span class="token string">"美食"</span>, <span class="token string">"钓鱼"</span>, <span class="token string">"旅游"</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span></code></pre><p>这时候是5项爱好的人员就会显示出来了。</p><h2 id="slice-显示选项"><a href="#slice-显示选项" class="headerlink" title="$slice-显示选项"></a>$slice-显示选项</h2><p>有时候我并不需要显示出数组中的所有值，而是只显示前两项，比如我们现在想显示每个人兴趣的前两项，而不是把每个人所有的兴趣都显示出来。</p><pre class=" language-bash"><code class="language-bash">db.workmate.find<span class="token punctuation">(</span>    <span class="token punctuation">{</span><span class="token punctuation">}</span>,    <span class="token punctuation">{</span>name:1,interest:<span class="token punctuation">{</span><span class="token variable">$slice</span>:2<span class="token punctuation">}</span>,age:1,_id:0<span class="token punctuation">}</span> <span class="token punctuation">)</span></code></pre><p>结果为：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">{</span> <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"panpan"</span>, <span class="token string">"age"</span> <span class="token keyword">:</span> 24, <span class="token string">"interest"</span> <span class="token keyword">:</span> <span class="token punctuation">[</span> <span class="token string">"看电影"</span>, <span class="token string">"看书"</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">{</span> <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"panda"</span>, <span class="token string">"age"</span> <span class="token keyword">:</span> 20, <span class="token string">"interest"</span> <span class="token keyword">:</span> <span class="token punctuation">[</span> <span class="token string">"篮球"</span>, <span class="token string">"看电影"</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">{</span> <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"jspan"</span>, <span class="token string">"age"</span> <span class="token keyword">:</span> 20, <span class="token string">"interest"</span> <span class="token keyword">:</span> <span class="token punctuation">[</span> <span class="token string">"做饭"</span>, <span class="token string">"画画"</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">{</span> <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"xiaowang"</span>, <span class="token string">"age"</span> <span class="token keyword">:</span> 26, <span class="token string">"interest"</span> <span class="token keyword">:</span> <span class="token punctuation">[</span> <span class="token string">"画画"</span>, <span class="token string">"聚会"</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span></code></pre><p>这时候就显示出了每个人兴趣的前两项，如果我们想显示兴趣的最后一项，可以直接使用slice:-1，来进行查询。</p><pre class=" language-bash"><code class="language-bash">db.workmate.find<span class="token punctuation">(</span>    <span class="token punctuation">{</span><span class="token punctuation">}</span>,    <span class="token punctuation">{</span>name:1,interest:<span class="token punctuation">{</span><span class="token variable">$slice</span>:-1<span class="token punctuation">}</span>,age:1,_id:0<span class="token punctuation">}</span> <span class="token punctuation">)</span></code></pre><p>结果为：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">{</span> <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"panpan"</span>, <span class="token string">"age"</span> <span class="token keyword">:</span> 24, <span class="token string">"interest"</span> <span class="token keyword">:</span> <span class="token punctuation">[</span> <span class="token string">"旅游"</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">{</span> <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"panda"</span>, <span class="token string">"age"</span> <span class="token keyword">:</span> 20, <span class="token string">"interest"</span> <span class="token keyword">:</span> <span class="token punctuation">[</span> <span class="token string">"做饭"</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">{</span> <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"jspan"</span>, <span class="token string">"age"</span> <span class="token keyword">:</span> 20, <span class="token string">"interest"</span> <span class="token keyword">:</span> <span class="token punctuation">[</span> <span class="token string">"看电影"</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">{</span> <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"xiaowang"</span>, <span class="token string">"age"</span> <span class="token keyword">:</span> 26, <span class="token string">"interest"</span> <span class="token keyword">:</span> <span class="token punctuation">[</span> <span class="token string">"看电影"</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>find的多条件查询</title>
      <link href="/categories/database/a15d25e1.html"/>
      <url>/categories/database/a15d25e1.html</url>
      
        <content type="html"><![CDATA[<p>很多时候我们需要查询的值不只是有一个简单的条件，比如我们现在要查询一下同事中是20岁和26岁的，还比如我们要查询同事中大于25岁并且会PhotoShop技能的。MongoDB在这方面也支持的很好。</p><h2 id="in修饰符"><a href="#in修饰符" class="headerlink" title="$in修饰符"></a>$in修饰符</h2><p>$in修饰符可以轻松解决一键多值的查询情况。就如上面我们讲的例子，现在要查询同事中年龄是20岁和26岁的信息。</p><pre class=" language-bash"><code class="language-bash">db.workmate.find<span class="token punctuation">(</span>    <span class="token punctuation">{</span>age:<span class="token punctuation">{</span><span class="token variable">$in</span>:<span class="token punctuation">[</span>20,26<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,    <span class="token punctuation">{</span>name:1,<span class="token string">"skill.skillOne"</span>:1,age:1,_id:0<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>结果为：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">{</span> <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"panda"</span>, <span class="token string">"age"</span> <span class="token keyword">:</span> 20, <span class="token string">"skill"</span> <span class="token keyword">:</span> <span class="token punctuation">{</span> <span class="token string">"skillOne"</span> <span class="token keyword">:</span> <span class="token string">"HTML+CSS"</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">{</span> <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"xiaowang"</span>, <span class="token string">"age"</span> <span class="token keyword">:</span> 26, <span class="token string">"skill"</span> <span class="token keyword">:</span> <span class="token punctuation">{</span> <span class="token string">"skillOne"</span> <span class="token keyword">:</span> <span class="token string">"PhotoShop"</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span></code></pre><p>与$in相对的修饰符是$nin，就是查询除了$in条件以外的值。</p><pre class=" language-bash"><code class="language-bash">db.workmate.find<span class="token punctuation">(</span>    <span class="token punctuation">{</span>age:<span class="token punctuation">{</span><span class="token variable">$nin</span>:<span class="token punctuation">[</span>20,26<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,    <span class="token punctuation">{</span>name:1,<span class="token string">"skill.skillOne"</span>:1,age:1,_id:0<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>结果为：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">{</span> <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"panpan"</span>, <span class="token string">"age"</span> <span class="token keyword">:</span> 24, <span class="token string">"skill"</span> <span class="token keyword">:</span> <span class="token punctuation">{</span> <span class="token string">"skillOne"</span> <span class="token keyword">:</span> <span class="token string">"HTML+CSS"</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span></code></pre><h2 id="or修饰符"><a href="#or修饰符" class="headerlink" title="$or修饰符"></a>$or修饰符</h2><p>它用来查询多个键值的情况，就比如查询同事中大于25岁或者会HTML+CSS的信息。主要区别是两个Key值。$in修饰符是一个Key值，这个需要去比较记忆。</p><pre class=" language-bash"><code class="language-bash">db.workmate.find<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token variable">$or</span>:<span class="token punctuation">[</span>    <span class="token punctuation">{</span>age:<span class="token punctuation">{</span><span class="token variable">$gte</span>:25<span class="token punctuation">}</span><span class="token punctuation">}</span>,    <span class="token punctuation">{</span><span class="token string">"skill.skillOne"</span><span class="token keyword">:</span><span class="token string">'HTML+CSS'</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span>,    <span class="token punctuation">{</span>name:1,<span class="token string">"skill.skillOne"</span>:1,age:1,_id:0<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>结果为：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">{</span> <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"panpan"</span>, <span class="token string">"age"</span> <span class="token keyword">:</span> 24, <span class="token string">"skill"</span> <span class="token keyword">:</span> <span class="token punctuation">{</span> <span class="token string">"skillOne"</span> <span class="token keyword">:</span> <span class="token string">"HTML+CSS"</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">{</span> <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"panda"</span>, <span class="token string">"age"</span> <span class="token keyword">:</span> 20, <span class="token string">"skill"</span> <span class="token keyword">:</span> <span class="token punctuation">{</span> <span class="token string">"skillOne"</span> <span class="token keyword">:</span> <span class="token string">"HTML+CSS"</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">{</span> <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"xiaowang"</span>, <span class="token string">"age"</span> <span class="token keyword">:</span> 26, <span class="token string">"skill"</span> <span class="token keyword">:</span> <span class="token punctuation">{</span> <span class="token string">"skillOne"</span> <span class="token keyword">:</span> <span class="token string">"PhotoShop"</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span></code></pre><p>与$or相对的修饰符是$nor，就是查询除了$or条件以外的值。</p><pre class=" language-bash"><code class="language-bash">db.workmate.find<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token variable">$nor</span>:<span class="token punctuation">[</span>    <span class="token punctuation">{</span>age:<span class="token punctuation">{</span><span class="token variable">$gte</span>:25<span class="token punctuation">}</span><span class="token punctuation">}</span>,    <span class="token punctuation">{</span><span class="token string">"skill.skillOne"</span><span class="token keyword">:</span><span class="token string">'HTML+CSS'</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span>,    <span class="token punctuation">{</span>name:1,<span class="token string">"skill.skillOne"</span>:1,age:1,_id:0<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>结果为：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">{</span> <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"jspan"</span>, <span class="token string">"age"</span> <span class="token keyword">:</span> 20, <span class="token string">"skill"</span> <span class="token keyword">:</span> <span class="token punctuation">{</span> <span class="token string">"skillOne"</span> <span class="token keyword">:</span> <span class="token string">"PhotoShop"</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span></code></pre><h2 id="and修饰符"><a href="#and修饰符" class="headerlink" title="$and修饰符"></a>$and修饰符</h2><p>$and用来查找几个key值都满足的情况，比如要查询同事中大于25岁并且会PhotoShop的信息，这时需要注意的是这两项必须全部满足。当然写法还是比较简单的。只要把上面代码中的$or换成$and就可以了。</p><pre class=" language-bash"><code class="language-bash">db.workmate.find<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token variable">$and</span>:<span class="token punctuation">[</span>    <span class="token punctuation">{</span>age:<span class="token punctuation">{</span><span class="token variable">$gte</span>:25<span class="token punctuation">}</span><span class="token punctuation">}</span>,    <span class="token punctuation">{</span><span class="token string">"skill.skillOne"</span><span class="token keyword">:</span><span class="token string">'HTML+CSS'</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span>,    <span class="token punctuation">{</span>name:1,<span class="token string">"skill.skillOne"</span>:1,age:1,_id:0<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>结果为：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">{</span> <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"xiaowang"</span>, <span class="token string">"age"</span> <span class="token keyword">:</span> 26, <span class="token string">"skill"</span> <span class="token keyword">:</span> <span class="token punctuation">{</span> <span class="token string">"skillOne"</span> <span class="token keyword">:</span> <span class="token string">"PhotoShop"</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span></code></pre><h2 id="not修饰符"><a href="#not修饰符" class="headerlink" title="$not修饰符"></a>$not修饰符</h2><p>它用来查询除条件之外的值，比如我们现在要查找除年龄大于18岁，小于25岁的人员信息。需要注意的是$not修饰符不能应用在条件语句中，只能在外边进行查询使用。</p><pre class=" language-bash"><code class="language-bash">db.workmate.find<span class="token punctuation">(</span><span class="token punctuation">{</span>    age:<span class="token punctuation">{</span>        <span class="token variable">$not</span>:<span class="token punctuation">{</span>            <span class="token variable">$lte</span>:25,            <span class="token variable">$gte</span>:18        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span>name:1,<span class="token string">"skill.skillOne"</span>:1,age:1,_id:0<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>结果为：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">{</span> <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"xiaowang"</span>, <span class="token string">"age"</span> <span class="token keyword">:</span> 26, <span class="token string">"skill"</span> <span class="token keyword">:</span> <span class="token punctuation">{</span> <span class="token string">"skillOne"</span> <span class="token keyword">:</span> <span class="token string">"PhotoShop"</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>find的不等修饰符</title>
      <link href="/categories/database/af88765b.html"/>
      <url>/categories/database/af88765b.html</url>
      
        <content type="html"><![CDATA[<h2 id="构造数据"><a href="#构造数据" class="headerlink" title="构造数据"></a>构造数据</h2><pre class=" language-bash"><code class="language-bash">var workmate1<span class="token operator">=</span><span class="token punctuation">{</span>    name:<span class="token string">'panpan'</span>,    age:24,    sex:1,    job:<span class="token string">'前端'</span>,    skill:<span class="token punctuation">{</span>        skillOne:<span class="token string">'HTML+CSS'</span>,        SkillTwo:<span class="token string">'JavaScript'</span>,        SkillThree:<span class="token string">'PHP'</span>    <span class="token punctuation">}</span>,    regeditTime:new Date<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>var workmate2<span class="token operator">=</span><span class="token punctuation">{</span>    name:<span class="token string">'panda'</span>,    age:20,    sex:1,    job:<span class="token string">'JAVA后端'</span>,    skill:<span class="token punctuation">{</span>        skillOne:<span class="token string">'HTML+CSS'</span>,        SkillTwo:<span class="token string">'J2EE'</span>,        SkillThree:<span class="token string">'PPT'</span>    <span class="token punctuation">}</span>,    regeditTime:new Date<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>var workmate3<span class="token operator">=</span><span class="token punctuation">{</span>    name:<span class="token string">'jspan'</span>,    age:20,    sex:1,    job:<span class="token string">'UI设计'</span>,    skill:<span class="token punctuation">{</span>        skillOne:<span class="token string">'PhotoShop'</span>,        SkillTwo:<span class="token string">'UI'</span>,        SkillThree:<span class="token string">'Word+Excel+PPT'</span>    <span class="token punctuation">}</span>,    regeditTime:new Date<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>var workmate4<span class="token operator">=</span><span class="token punctuation">{</span>    name:<span class="token string">'xiaowang'</span>,    age:26,    sex:1,    job:<span class="token string">'UI设计'</span>,    skill:<span class="token punctuation">{</span>        skillOne:<span class="token string">'PhotoShop'</span>,        SkillTwo:<span class="token string">'UI'</span>,        SkillThree:<span class="token string">'Word+Excel+PPT'</span>    <span class="token punctuation">}</span>,    regeditTime:new Date<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>var db<span class="token operator">=</span>connect<span class="token punctuation">(</span><span class="token string">'company'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var workmateArray<span class="token operator">=</span><span class="token punctuation">[</span>workmate1,workmate2,workmate3,workmate4<span class="token punctuation">]</span><span class="token punctuation">;</span>db.workmate.insert<span class="token punctuation">(</span>workmateArray<span class="token punctuation">)</span><span class="token punctuation">;</span>print<span class="token punctuation">(</span><span class="token string">'[SUCCESS]：The data was inserted successfully'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="简单查找"><a href="#简单查找" class="headerlink" title="简单查找"></a>简单查找</h2><p>比如我们现在要查找数据中年龄(age)为20。那我们直接进行查找加条件就可以了。</p><pre class=" language-bash"><code class="language-bash">db.workmate.find<span class="token punctuation">(</span><span class="token punctuation">{</span>age:20<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><h2 id="筛选字段"><a href="#筛选字段" class="headerlink" title="筛选字段"></a>筛选字段</h2><p>现在返回来的数据项太多，太乱，有时候我们的程序并不需要这么多选项。比如我们只需要姓名和年龄就可以了。这时候我们需要写第二个参数，看下面的代码。</p><pre class=" language-bash"><code class="language-bash">db.workmate.find<span class="token punctuation">(</span>    <span class="token punctuation">{</span>age:20<span class="token punctuation">}</span>,    <span class="token punctuation">{</span>name:true,age:true<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>你会在终端中看到如下结果：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">{</span> <span class="token string">"_id"</span> <span class="token keyword">:</span> ObjectId<span class="token punctuation">(</span><span class="token string">"5cc0047eec051ac9f4b1a94a"</span><span class="token punctuation">)</span>, <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"panda"</span>, <span class="token string">"age"</span> <span class="token keyword">:</span> 20 <span class="token punctuation">}</span><span class="token punctuation">{</span> <span class="token string">"_id"</span> <span class="token keyword">:</span> ObjectId<span class="token punctuation">(</span><span class="token string">"5cc11c51f3101b6fe831af75"</span><span class="token punctuation">)</span>, <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"jspan"</span>, <span class="token string">"age"</span> <span class="token keyword">:</span> 20 <span class="token punctuation">}</span></code></pre><p>细心的小伙伴会发现还不够完美，多了一个ID字段，这个也不是我们想要的，这时候只要把_id:false就可以了。当然这里的false和true，也可以用0和1表示。</p><pre class=" language-bash"><code class="language-bash">db.workmate.find<span class="token punctuation">(</span>    <span class="token punctuation">{</span>age:20<span class="token punctuation">}</span>,    <span class="token punctuation">{</span>name:true,age:true,_id:false<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>这时候你在终端中查看结果，已经是我们想要的了。</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">{</span> <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"panda"</span>, <span class="token string">"age"</span> <span class="token keyword">:</span> 20 <span class="token punctuation">}</span><span class="token punctuation">{</span> <span class="token string">"name"</span> <span class="token keyword">:</span> <span class="token string">"jspan"</span>, <span class="token string">"age"</span> <span class="token keyword">:</span> 20 <span class="token punctuation">}</span></code></pre><p>其实这些查找操作，都是在作等于的阶段，但是不光只有等于查询，我们需要更多的查询条件。</p><h2 id="不等修饰符"><a href="#不等修饰符" class="headerlink" title="不等修饰符"></a>不等修饰符</h2><ul><li>小于($lt): 英文全称less-than</li><li>小于等于($lte): 英文全称less-than-equal</li><li>大于($gt): 英文全称greater-than</li><li>大于等于($gte): 英文全称greater-than-equal</li><li>不等于($ne): 英文全称not-equal</li></ul><p>我们现在要查找一下，公司内年龄小于25大于20岁的人员。看下面的代码。</p><pre class=" language-bsah"><code class="language-bsah">db.workmate.find(    {age:{$lte:25,$gte:20}},    {name:true,age:true,_id:false})</code></pre><h2 id="日期查找"><a href="#日期查找" class="headerlink" title="日期查找"></a>日期查找</h2><p>MongoDB也提供了方便的日期查找方法，现在我们要查找注册日期大于2019年5月9日的数据，我们可以这样写代码。</p><pre class=" language-bash"><code class="language-bash">var startDate<span class="token operator">=</span> new Date<span class="token punctuation">(</span><span class="token string">'05/09/2019'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>db.workmate.find<span class="token punctuation">(</span>    <span class="token punctuation">{</span>regeditTime:<span class="token punctuation">{</span><span class="token variable">$gt</span>:startDate<span class="token punctuation">}</span><span class="token punctuation">}</span>,    <span class="token punctuation">{</span>name:true,age:true,<span class="token string">"skill.skillOne"</span>:true,_id:false<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>我们先申明了一个日期变量，然后使用大于符进行筛选。</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>状态返回与安全</title>
      <link href="/categories/database/fa005713.html"/>
      <url>/categories/database/fa005713.html</url>
      
        <content type="html"><![CDATA[<h2 id="应答式写入"><a href="#应答式写入" class="headerlink" title="应答式写入"></a>应答式写入</h2><p>在动手学习代码之前，我们先来了解一个概念：应答式写入。在以前的文章中，我们的操作都是非应答式写入，就是在操作完数据库后，它并没有给我们任何的回应和返回值，而是我们自己安慰自己写了一句话（print(‘[update]:The data was updated successfully’);）。这在工作中是不允许的，因为根本不能体现我们修改的结果。<br>应答式写入就会给我们直接返回结果（报表），结果里边的包含项会很多，这样我们就可以很好的进行程序的控制和安全机制的处理。有点像前端调用后端接口，无论作什么，后端都要给我一些状态字一样。</p><h2 id="db-runCommand"><a href="#db-runCommand" class="headerlink" title="db.runCommand( )"></a>db.runCommand( )</h2><p>它是数据库运行命令的执行器，执行命令首选就要使用它，因为它在Shell和驱动程序间提供了一致的接口。（几乎操作数据库的所有操作，都可以使用runCommand来执行）现在我们试着用runCommand来修改数据库，看看结果和直接用db.collections.update有什么不同。</p><pre class=" language-bash"><code class="language-bash">db.workmate.update<span class="token punctuation">(</span><span class="token punctuation">{</span>sex:1<span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token variable">$set</span>:<span class="token punctuation">{</span>money:1000<span class="token punctuation">}</span><span class="token punctuation">}</span>,false,true<span class="token punctuation">)</span>var resultMessage<span class="token operator">=</span>db.runCommand<span class="token punctuation">(</span><span class="token punctuation">{</span>getLastError:1<span class="token punctuation">}</span><span class="token punctuation">)</span>printjson<span class="token punctuation">(</span>resultMessage<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>上边的代码，我们修改了所有男士的数据，每个人增加了1000元钱(money)，然后用db.runCommand()执行，可以看到执行结果在控制台返回了。</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">{</span>    <span class="token string">"connectionId"</span> <span class="token keyword">:</span> 1,    <span class="token string">"updatedExisting"</span> <span class="token keyword">:</span> true,    <span class="token string">"n"</span> <span class="token keyword">:</span> 2,    <span class="token string">"syncMillis"</span> <span class="token keyword">:</span> 0,    <span class="token string">"writtenTo"</span> <span class="token keyword">:</span> null,    <span class="token string">"err"</span> <span class="token keyword">:</span> null,    <span class="token string">"ok"</span> <span class="token keyword">:</span> 1<span class="token punctuation">}</span></code></pre><ul><li>false: 第一句末尾的false是upsert的简写，代表没有此条数据时不增加</li><li>true: true是multi的简写，代表修改所有</li><li>getLastError: 1:表示返回功能错误</li><li>printjson: 表示以json对象的格式输出到控制台</li></ul><p>db.listCommands( ):查看所有的Commad命令。<br>比如我们要查看是否和数据库链接成功了，就可以使用Command命令。</p><pre class=" language-bash"><code class="language-bash">db.runCommand<span class="token punctuation">(</span><span class="token punctuation">{</span>ping:1<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>返回ok：1就代表链接正常。</p><h2 id="findAndModify"><a href="#findAndModify" class="headerlink" title="findAndModify"></a>findAndModify</h2><p>从名字上就可以看出，findAndModify是查找并修改的意思。配置它可以在修改后给我们返回修改的结果。我们先看下面的代码：</p><pre class=" language-bash"><code class="language-bash">var myModify<span class="token operator">=</span><span class="token punctuation">{</span>    findAndModify:<span class="token string">"workmate"</span>,    query:<span class="token punctuation">{</span>name:<span class="token string">'jspan'</span><span class="token punctuation">}</span>,    update:<span class="token punctuation">{</span><span class="token variable">$set</span>:<span class="token punctuation">{</span>age:18<span class="token punctuation">}</span><span class="token punctuation">}</span>,    new:true    //更新完成，需要查看结果，如果为false不进行查看结果<span class="token punctuation">}</span>var ResultMessage<span class="token operator">=</span>db.runCommand<span class="token punctuation">(</span>myModify<span class="token punctuation">)</span><span class="token punctuation">;</span>printjson<span class="token punctuation">(</span>ResultMessage<span class="token punctuation">)</span></code></pre><p>findAndModify的性能是没有直接使用db.collections.update的性能好，但是在实际工作中都是使用它，毕竟要商用的程序安全性还是比较重要的。</p><h2 id="findAndModify属性值"><a href="#findAndModify属性值" class="headerlink" title="findAndModify属性值"></a>findAndModify属性值</h2><ul><li>query: 需要查询的条件/文档</li><li>sort: 进行排序</li><li>remove: [boolean]是否删除查找到的文档，值填写true，可以删除</li><li>new: [boolean]返回更新前的文档还是更新后的文档</li><li>fields: 需要返回的字段</li><li>upsert: 没有这个值是否增加</li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>update数组修改器</title>
      <link href="/categories/database/6abf4a82.html"/>
      <url>/categories/database/6abf4a82.html</url>
      
        <content type="html"><![CDATA[<h2 id="push追加数组-内嵌文档值"><a href="#push追加数组-内嵌文档值" class="headerlink" title="$push追加数组/内嵌文档值"></a>$push追加数组/内嵌文档值</h2><p>$push的功能是追加数组中的值，但我们也经常用它操作内嵌稳文档，就是{}对象型的值。先看一个追加数组值的方式，比如我们要给张三加上一个爱好(interset)为画画（draw）：</p><pre class=" language-bash"><code class="language-bash">db.workmate.update<span class="token punctuation">(</span><span class="token punctuation">{</span>name:<span class="token string">'zhangsan'</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token variable">$push</span>:<span class="token punctuation">{</span>interest:<span class="token string">'draw'</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>当然$push修饰符还可以为内嵌文档增加值，比如我们现在要给我们的UI，增加一项新的技能skillFour为draw，这时候我们可以操作为：</p><pre class=" language-bash"><code class="language-bash">db.workmate.update<span class="token punctuation">(</span><span class="token punctuation">{</span>name:<span class="token string">'jspan'</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token variable">$push</span>:<span class="token punctuation">{</span><span class="token string">"skill.skillFour"</span><span class="token keyword">:</span><span class="token string">'draw'</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>$push修饰符在工作中是最常用的，因为我们的数据一般都会涉及数组和内嵌文档的操作。</p><h2 id="ne查找是否存在"><a href="#ne查找是否存在" class="headerlink" title="$ne查找是否存在"></a>$ne查找是否存在</h2><p>它主要的作用是，检查一个值是否存在，如果不存在再执行操作，存在就不执行。<br>例子：如果zhangsan的爱好（interest）里没有palyGame这个值，我们就加入Game这个爱好。</p><pre class=" language-bash"><code class="language-bash">db.workmate.update<span class="token punctuation">(</span><span class="token punctuation">{</span>name:<span class="token string">'zhangsan'</span>,<span class="token string">"interest"</span>:<span class="token punctuation">{</span><span class="token variable">$ne</span><span class="token keyword">:</span><span class="token string">'playGame'</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token variable">$push</span>:<span class="token punctuation">{</span>interest:<span class="token string">'Game'</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><blockquote><p>总结：没有则修改，有则不修改。</p></blockquote><h2 id="addToSet-升级版的-ne"><a href="#addToSet-升级版的-ne" class="headerlink" title="$addToSet 升级版的$ne"></a>$addToSet 升级版的$ne</h2><p>它是$ne的升级版本（查找是否存在，不存在就push上去），操作起来更直观和方便，所以再工作中这个要比$en用的多。<br>例子：我们现在要查看张三(zhangsan)兴趣(interest)中有没有阅读（readBook）这项，没有则加入读书(readBook)的兴趣.</p><pre class=" language-bash"><code class="language-bash">db.workmate.update<span class="token punctuation">(</span><span class="token punctuation">{</span>name:<span class="token string">"zhangsan"</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token variable">$addToSet</span>:<span class="token punctuation">{</span>interest:<span class="token string">"readBook"</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><h2 id="each-批量追加"><a href="#each-批量追加" class="headerlink" title="$each 批量追加"></a>$each 批量追加</h2><p>它可以传入一个数组，一次增加多个值进去，相当于批量操作，性能同样比循环操作要好很多，这个是需要我们注意的，工作中也要先组合成数组，然后用批量的形式进行操作。<br>例子：我们现在要给zhangsan,一次加入三个爱好，唱歌（Sing），跳舞（Dance），编码（Code）。</p><pre class=" language-bash"><code class="language-bash">var newInterset<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"Sing"</span>,<span class="token string">"Dance"</span>,<span class="token string">"Code"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>db.workmate.update<span class="token punctuation">(</span><span class="token punctuation">{</span>name:<span class="token string">"zhangsan"</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token variable">$addToSet</span>:<span class="token punctuation">{</span>interest:<span class="token punctuation">{</span><span class="token variable">$each</span>:newInterset<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><h2 id="pop-删除数组值"><a href="#pop-删除数组值" class="headerlink" title="$pop 删除数组值"></a>$pop 删除数组值</h2><p>$pop只删除一次，并不是删除所有数组中的值。而且它有两个选项，一个是1和-1。</p><ul><li>1：从数组末端进行删除</li><li>-1：从数组开端进行删除</li></ul><p>例子：现在要删除zhangsan的编码爱好（code）。</p><pre class=" language-bash"><code class="language-bash">db.workmate.update<span class="token punctuation">(</span><span class="token punctuation">{</span>name:<span class="token string">'zhangsan'</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token variable">$pop</span>:<span class="token punctuation">{</span>interest:1<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><h2 id="数组定位修改"><a href="#数组定位修改" class="headerlink" title="数组定位修改"></a>数组定位修改</h2><p>有时候只知道修改数组的第几位，但并不知道是什么，这时候我们可以使用interest.int 的形式。<br>例子，比如我们现在要修改zhangsan的第三个兴趣为编码（Code），注意这里的计数是从0开始的。</p><pre class=" language-bash"><code class="language-bash">db.workmate.update<span class="token punctuation">(</span><span class="token punctuation">{</span>name:<span class="token string">'zhangsan'</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token variable">$set</span>:<span class="token punctuation">{</span><span class="token string">"interest.2"</span><span class="token keyword">:</span><span class="token string">"Code"</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初识update修改器</title>
      <link href="/categories/database/1db87a14.html"/>
      <url>/categories/database/1db87a14.html</url>
      
        <content type="html"><![CDATA[<h2 id="set修改器"><a href="#set修改器" class="headerlink" title="$set修改器"></a>$set修改器</h2><p>用来修改一个指定的键值(key),这时候我们要修改上节课的sex和age就非常方便了，只要一句话就可以搞定。</p><pre class=" language-bash"><code class="language-bash">db.workmate.update<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">"name"</span><span class="token keyword">:</span><span class="token string">"jspan"</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">"<span class="token variable">$set</span>"</span>:<span class="token punctuation">{</span>sex:2,age:21<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>修改好后，我们可以用db.workmate.find()来进行查看，你会发现数据已经被修改。</p><h2 id="修改嵌套内容-内嵌文档"><a href="#修改嵌套内容-内嵌文档" class="headerlink" title="修改嵌套内容(内嵌文档)"></a>修改嵌套内容(内嵌文档)</h2><p>比如现在的UI的技能发生了变化，说她不会作PPT而是word作的很好，需要进行修改。这时候你会发现skill数据是内嵌的，这时候我们可以属性的形式进行修改，skill.skillThree。具体看下面的代码。</p><pre class=" language-bash"><code class="language-bash">db.workmate.update<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">"name"</span><span class="token keyword">:</span><span class="token string">"jspan"</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">"<span class="token variable">$set</span>"</span>:<span class="token punctuation">{</span><span class="token string">"skill.skillThree"</span><span class="token keyword">:</span><span class="token string">'word'</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>这样就可以简单的修改内嵌文档了。</p><h2 id="unset用于将key删除"><a href="#unset用于将key删除" class="headerlink" title="$unset用于将key删除"></a>$unset用于将key删除</h2><p>它的作用其实就是删除一个key值和键。一般女孩子都是不希望看到自己的年龄的，所以要求我们把年龄删除。这时候我们就可以使用$unset的形式。</p><pre class=" language-bash"><code class="language-bash">db.workmate.update<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">"name"</span><span class="token keyword">:</span><span class="token string">"jspan"</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token variable">$unset</span>:<span class="token punctuation">{</span><span class="token string">"age"</span><span class="token keyword">:</span><span class="token string">''</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>当你删除后，想加回来可以直接用set进行添加。</p><h2 id="inc对数字进行计算"><a href="#inc对数字进行计算" class="headerlink" title="$inc对数字进行计算"></a>$inc对数字进行计算</h2><p>它是对value值的修改，但是修改的必须是数字，字符串是不起效果的。我们现在要对jspan的年龄减去2岁，就可以直接用$inc来操作。</p><pre class=" language-bash"><code class="language-bash">db.workmate.update<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">"name"</span><span class="token keyword">:</span><span class="token string">"jspan"</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token variable">$inc</span>:<span class="token punctuation">{</span><span class="token string">"age"</span>:-2<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><h2 id="multi选项"><a href="#multi选项" class="headerlink" title="multi选项"></a>multi选项</h2><p>现在领导说了，你要把每个人的爱好也加入进来，但是如果你直接写会只加一个，比如下面这种形式。</p><pre class=" language-bash"><code class="language-bash">db.workmate.update<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token variable">$set</span>:<span class="token punctuation">{</span>interset:<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>这时候你用db.workmate.find()查找，你会发现只改变了第一个数据，其他两条没有改变。这时候我们想改变就要用到multi选项。</p><pre class=" language-bash"><code class="language-bash">db.workmate.update<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token variable">$set</span>:<span class="token punctuation">{</span>interset:<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span>multi:true<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>这时候每个数据都发生了改变，multi是有ture和false两个值，true代表全部修改，false代表只修改一个(默认值)。</p><h2 id="upsert选项"><a href="#upsert选项" class="headerlink" title="upsert选项"></a>upsert选项</h2><p>upsert是在找不到值的情况下，直接插入这条数据。比如我们这时候又来了一个新同事zhangsan，我们这时候修改他的信息，age设置成20岁，但集合中并没有这条数据。这时候可以使用upsert选项直接添加。</p><pre class=" language-bash"><code class="language-bash">db.workmate.update<span class="token punctuation">(</span><span class="token punctuation">{</span>name:<span class="token string">'zhangsan'</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token variable">$set</span>:<span class="token punctuation">{</span>age:20<span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span>upsert:true<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>upsert也有两个值：true代表没有就添加，false代表没有不添加(默认值)。</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>update常见错误</title>
      <link href="/categories/database/84b12bae.html"/>
      <url>/categories/database/84b12bae.html</url>
      
        <content type="html"><![CDATA[<h2 id="错误：只update修改项"><a href="#错误：只update修改项" class="headerlink" title="错误：只update修改项"></a>错误：只update修改项</h2><p>如果你有过关系型数据库的经验，你会很容易犯只修改需要改变的一项，因为在关系型数据库中就是这样作的。先来准备一些数据。</p><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">/* demo01.js */</span><span class="token keyword">var</span> workmate1<span class="token operator">=</span><span class="token punctuation">{</span>    name<span class="token punctuation">:</span><span class="token string">'panpan'</span><span class="token punctuation">,</span>    age<span class="token punctuation">:</span><span class="token number">24</span><span class="token punctuation">,</span>    sex<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span>    job<span class="token punctuation">:</span><span class="token string">'前端'</span><span class="token punctuation">,</span>    skill<span class="token punctuation">:</span><span class="token punctuation">{</span>        skillOne<span class="token punctuation">:</span><span class="token string">'HTML+CSS'</span><span class="token punctuation">,</span>        SkillTwo<span class="token punctuation">:</span><span class="token string">'JavaScript'</span><span class="token punctuation">,</span>        SkillThree<span class="token punctuation">:</span><span class="token string">'PHP'</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    regeditTime<span class="token punctuation">:</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">var</span> workmate2<span class="token operator">=</span><span class="token punctuation">{</span>    name<span class="token punctuation">:</span><span class="token string">'panda'</span><span class="token punctuation">,</span>    age<span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">,</span>    sex<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span>    job<span class="token punctuation">:</span><span class="token string">'JAVA后端'</span><span class="token punctuation">,</span>    skill<span class="token punctuation">:</span><span class="token punctuation">{</span>        skillOne<span class="token punctuation">:</span><span class="token string">'HTML+CSS'</span><span class="token punctuation">,</span>        SkillTwo<span class="token punctuation">:</span><span class="token string">'J2EE'</span><span class="token punctuation">,</span>        SkillThree<span class="token punctuation">:</span><span class="token string">'PPT'</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    regeditTime<span class="token punctuation">:</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">var</span> workmate3<span class="token operator">=</span><span class="token punctuation">{</span>    name<span class="token punctuation">:</span><span class="token string">'jspan'</span><span class="token punctuation">,</span>    age<span class="token punctuation">:</span><span class="token number">20</span><span class="token punctuation">,</span>    sex<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span>    job<span class="token punctuation">:</span><span class="token string">'UI设计'</span><span class="token punctuation">,</span>    skill<span class="token punctuation">:</span><span class="token punctuation">{</span>        skillOne<span class="token punctuation">:</span><span class="token string">'PhotoShop'</span><span class="token punctuation">,</span>        SkillTwo<span class="token punctuation">:</span><span class="token string">'UI'</span><span class="token punctuation">,</span>        SkillThree<span class="token punctuation">:</span><span class="token string">'Word+Excel+PPT'</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    regeditTime<span class="token punctuation">:</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">var</span> db<span class="token operator">=</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">'company'</span><span class="token punctuation">)</span><span class="token keyword">var</span> workmateArray<span class="token operator">=</span><span class="token punctuation">[</span>workmate1<span class="token punctuation">,</span>workmate2<span class="token punctuation">,</span>workmate3<span class="token punctuation">]</span>db<span class="token punctuation">.</span>workmate<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>workmateArray<span class="token punctuation">)</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">'[SUCCESS]: The data was inserted successfully.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>上面的代码，我们以文件的形式向数据库中插入了3条数据。<br>这时候我突然发现UI职位的性别出现了错误，本来人家是个美女，这里却写成了男，我们需要修改这条数据，但是经常会这样写。<br>这样写的问题是，我们的最后一条数据变成了只有sex:0，其它数据全部丢失了，这肯定不是我们想要的。这是新手在操作数据库修改时经常犯的一个错误，就是只修改变动的数据。</p><h2 id="正确修改方法"><a href="#正确修改方法" class="headerlink" title="正确修改方法"></a>正确修改方法</h2><p>可以声明一个变量，然后把要改变数据的全部信息放入变量，最后执行修改操作。</p><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">/* demo02.js */</span><span class="token keyword">var</span> db<span class="token operator">=</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">'company'</span><span class="token punctuation">)</span><span class="token keyword">var</span> workmate3<span class="token operator">=</span><span class="token punctuation">{</span>    name<span class="token punctuation">:</span><span class="token string">'jspan'</span><span class="token punctuation">,</span>    age<span class="token punctuation">:</span><span class="token number">20</span><span class="token punctuation">,</span>    sex<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">,</span>    job<span class="token punctuation">:</span><span class="token string">'UI设计'</span><span class="token punctuation">,</span>    skill<span class="token punctuation">:</span><span class="token punctuation">{</span>        skillOne<span class="token punctuation">:</span><span class="token string">'PhotoShop'</span><span class="token punctuation">,</span>        SkillTwo<span class="token punctuation">:</span><span class="token string">'UI'</span><span class="token punctuation">,</span>        SkillThree<span class="token punctuation">:</span><span class="token string">'Word+Excel+PPT'</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    regeditTime<span class="token punctuation">:</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>db<span class="token punctuation">.</span>workmate<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span>name<span class="token punctuation">:</span><span class="token string">'jspan'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>workmate3<span class="token punctuation">)</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">'[update]: The data was updated successfully'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>这时候你需要删除（db.workmate.drop()）表中的数据，因为jspan这个用户已经不在数据库中了，然后重新使用load方法载入插入数据再进行修改。<br><strong>执行命令如下:</strong></p><pre class=" language-js"><code class="language-js">db<span class="token punctuation">.</span>workmate<span class="token punctuation">.</span><span class="token function">drop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string">'./demo01.js'</span><span class="token punctuation">)</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string">'./demo02.js'</span><span class="token punctuation">)</span></code></pre><p>现在这种方法才是正确的，数据修改正常了，但是你会发现写起来非常麻烦，而且特别容易写错。</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>批量插入的正确方法</title>
      <link href="/categories/database/f3b61b38.html"/>
      <url>/categories/database/f3b61b38.html</url>
      
        <content type="html"><![CDATA[<p>在操作数据库时要注意两个能力：</p><ul><li>第一个是快速存储能力。</li><li>第二个是方便迅速查询能力。</li></ul><h2 id="批量插入"><a href="#批量插入" class="headerlink" title="批量插入"></a>批量插入</h2><p>批量数据插入是以数组的方式进行的（如果写错，可以3个回车可以切出来）。我们现在命令行中敲入下面的代码，我们可以看到数据顺利插入了。</p><pre class=" language-bash"><code class="language-bash">db.test.insert<span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token punctuation">{</span><span class="token string">"_id"</span>:1<span class="token punctuation">}</span>,    <span class="token punctuation">{</span><span class="token string">"_id"</span>:2<span class="token punctuation">}</span>,    <span class="token punctuation">{</span><span class="token string">"_id"</span>:3<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p>老版本MongoDB（3.2以前的版本基本都需要）是需要在Insert前加一个batch单词的，如下代码。</p><pre class=" language-bash"><code class="language-bash">db.test.batchInsert<span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token punctuation">{</span><span class="token string">"_id"</span>:1<span class="token punctuation">}</span>,    <span class="token punctuation">{</span><span class="token string">"_id"</span>:2<span class="token punctuation">}</span>,    <span class="token punctuation">{</span><span class="token string">"_id"</span>:3<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><blockquote><p>注意一次插入不要超过48M，像.zip和大图片什么的尽量用静态存储，MongoDB存储静态路径就好，这也算是一个规则。</p></blockquote><h2 id="批量插入性能测试"><a href="#批量插入性能测试" class="headerlink" title="批量插入性能测试"></a>批量插入性能测试</h2><p>循环插入快还是批量插入快？试着写一个小Shell，来验证一下结果。<br>先写一个循环插入方法：</p><pre class=" language-js"><code class="language-js"><span class="token keyword">var</span> startTime <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//得到开始时间</span><span class="token keyword">var</span>  db <span class="token operator">=</span> <span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">'log'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//链接数据库</span><span class="token comment" spellcheck="true">//开始循环</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">1000</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    db<span class="token punctuation">.</span>test<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token punctuation">{</span>num<span class="token punctuation">:</span>i<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">var</span> runTime <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>startTime<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//计算时间差</span>print <span class="token punctuation">(</span><span class="token string">'This run this is:'</span><span class="token operator">+</span>runTime<span class="token operator">+</span><span class="token string">'ms'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//打印出来</span></code></pre><p>我测试的时间509ms，这个速度虽然和电脑性能有关，但还是不太理想，1000条数据用了将近半秒。</p><p>批量插入代码：</p><pre class=" language-js"><code class="language-js"><span class="token keyword">var</span> startTime <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span>  db <span class="token operator">=</span> <span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">'log'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> tempArray <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>              <span class="token comment" spellcheck="true">//声明一个数组</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">1000</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//循环向数组中放入值</span>    tempArray<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>num<span class="token punctuation">:</span>i<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>db<span class="token punctuation">.</span>test<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>tempArray<span class="token punctuation">)</span>       <span class="token comment" spellcheck="true">//批量一次插入</span><span class="token keyword">var</span> runTime <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>startTime<span class="token punctuation">;</span>print <span class="token punctuation">(</span><span class="token string">'This run this is:'</span><span class="token operator">+</span>runTime<span class="token operator">+</span><span class="token string">'ms'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>这次用了18ms，性能远远超过循环插入。</p><p>总结：在工作中一定要照顾数据库性能，这也是你水平的体现，一个技术会了很简单，但是要作精通不那么简单。在工作中如果在循环插入和批量插入举棋不定，那就选批量插入吧，它会给我们更优的性能体验。</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用js文件写mongo命令</title>
      <link href="/categories/database/55679ed1.html"/>
      <url>/categories/database/55679ed1.html</url>
      
        <content type="html"><![CDATA[<p>把命令写入JS中： 现在模拟一个用户登录日志表的信息，用JS进行编写。新在一个新建的目录下，比如D:/mongoShell/，新建一个goTask.js文件。文件内容如下：</p><pre class=" language-js"><code class="language-js"><span class="token keyword">var</span> userName<span class="token operator">=</span><span class="token string">"panpan"</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//声明一个登录名             </span><span class="token keyword">var</span> timeStamp<span class="token operator">=</span>Date<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//声明登录时的时间戳  </span><span class="token keyword">var</span> jsonDdatabase<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">"loginUnser"</span><span class="token punctuation">:</span>userName<span class="token punctuation">,</span><span class="token string">"loginTime"</span><span class="token punctuation">:</span>timeStamp<span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//组成JSON字符串</span><span class="token keyword">var</span> db <span class="token operator">=</span> <span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">'log'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//链接数据库</span>db<span class="token punctuation">.</span>login<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>jsonDdatabase<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//插入数据</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">'[demo]log  print success'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//没有错误显示成功</span></code></pre><p><strong>执行JS文件</strong><br>写好了JS文件，需要执行起来，看一下文件是否存在问题，能否顺利的插入数据到MongoDB中。<br>执行其实很简单，只要使用mongo xxx.js(xxx就是我们写的goTask.js文件)。</p><pre class=" language-bash"><code class="language-bash">mongo goTask.js</code></pre><p>然后我们可以在命令行看到已经执行成功，可以到终端中进行查看插入结果。</p><pre class=" language-bash"><code class="language-bash">use logdb.login.find<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mongo基本命令</title>
      <link href="/categories/database/1ad5be0d.html"/>
      <url>/categories/database/1ad5be0d.html</url>
      
        <content type="html"><![CDATA[<p>先来一个常用的赋值和输出命令，熟悉一下。</p><pre class=" language-bash"><code class="language-bash">var x<span class="token operator">=</span><span class="token string">'Hello World'</span>print<span class="token punctuation">(</span>x<span class="token punctuation">)</span></code></pre><blockquote><p>需要注意的是这里的输出不再使用console.log(‘Hello World’),而是使用print(‘Hello World’),这个稍有区别。</p></blockquote><p>还可以定义函数：</p><pre class=" language-bash"><code class="language-bash"><span class="token keyword">function</span> panpan<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token string">'Hello World'</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>学到这里，我们用的都是JavaScript的语法，这些我们可以信手拈来，非常容易。</p><p><strong>MongoDB的存储结构</strong> 以前我们的关系型数据库的数据结构都是顶层是库，库下面是表，表下面是数据。但是MongoDB有所不同，库下面是集合，集合下面是文件。在学习中我们可以对比记忆，这样才能更好的了解这些名词，其实数据表就是集合，数据行就是文件，当然这只是为了记忆，实质还是有区别的。</p><h2 id="基础Shell命令"><a href="#基础Shell命令" class="headerlink" title="基础Shell命令"></a>基础Shell命令</h2><ul><li>show dbs :显示已有数据库，如果你刚安装好，会默认有local、admin(config)，这是MongoDB的默认数据库，我们在新建库时是不允许起这些名称的。</li><li>use admin： 进入数据，也可以理解成为使用数据库。成功会显示：switched to db admin。</li><li>show collections: 显示数据库中的集合（关系型中叫表，我们要逐渐熟悉）。</li><li>db:显示当前位置，也就是你当前使用的数据库名称，这个命令算是最常用的，因为你在作任何操作的时候都要先查看一下自己所在的库，以免造成操作错误。</li></ul><h2 id="数据操作基础命令"><a href="#数据操作基础命令" class="headerlink" title="数据操作基础命令"></a>数据操作基础命令</h2><ul><li>use db（建立数据库）：use不仅可以进入一个数据库，如果你敲入的库不存在，它还可以帮你建立一个库。但是在没有集合前，它还是默认为空。</li><li>db.集合.insert( ):新建数据集合和插入文件（数据），当集合没有时，这时候就可以新建一个集合，并向里边插入数据。<pre class=" language-bash"><code class="language-bash">db.user.insert<span class="token punctuation">(</span><span class="token punctuation">{</span>“name”:”panpan”<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre></li><li>db.集合.find( ):查询所有数据，这条命令会列出集合下的所有数据，可以看到MongoDB是自动给我们加入了索引值的。<pre class=" language-bash"><code class="language-bash">db.user.find<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre></li><li>db.集合.findOne( ):查询第一个文件数据，这里需要注意的，所有MongoDB的组合单词都使用首字母小写的驼峰式写法。</li><li>db.集合.update({查询},{修改}):修改文件数据，第一个是查询条件，第二个是要修改成的值。这里注意的是可以多加文件数据项的。<pre class=" language-bash"><code class="language-bash">db.user.update<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">"name"</span><span class="token keyword">:</span><span class="token string">"panpan"</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token string">"name"</span><span class="token keyword">:</span><span class="token string">"panpan"</span>,<span class="token string">"age"</span><span class="token keyword">:</span><span class="token string">"20"</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre></li><li>db.集合.remove(条件)：删除文件数据，注意的是要跟一个条件。<pre class=" language-bash"><code class="language-bash">db.user.remove<span class="token punctuation">(</span><span class="token punctuation">{</span>“name”:”panpan”<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre></li><li>db.集合.drop( ):删除整个集合，这个在实际工作中一定要谨慎使用，如果是程序，一定要二次确认。</li><li>db.dropDatabase( ):删除整个数据库，在删除库时，一定要先进入数据库，然后再删除。实际工作中这个基本不用，实际工作可定需要保留数据和痕迹的。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>认识和安装MongoDB</title>
      <link href="/categories/database/83dcefb7.html"/>
      <url>/categories/database/83dcefb7.html</url>
      
        <content type="html"><![CDATA[<p>都知道MongoDB是非关系型数据库，要了解非关系型数据库就必须先了解关系型数据库，关系数据库，是建立在关系模型基础上的数据库。比较有名气的关系型数据库，比如Oracle、DB2、MSSQL、Mysql。</p><h2 id="非关系数据库和关系型数据库的区别是什么？"><a href="#非关系数据库和关系型数据库的区别是什么？" class="headerlink" title="非关系数据库和关系型数据库的区别是什么？"></a>非关系数据库和关系型数据库的区别是什么？</h2><ul><li>实质：非关系型数据库的实质：非关系型数据库产品是传统关系型数据库的功能阉割版，通过减少用不到或很少用的功能，来大幅度提高产品性能。</li><li>价格：目前的非关系型数据库基本都是免费的，而比较有名气的关系型数据库都是收费的，比如：Oracle、DB2、MSSQL。MySql虽然是免费的，但是处理大型数据还是要提前作很多工作的。</li><li>功能：实际开发中，很多业务需求，其实并不需要完整的关系型数据库功能，非关系型数据库的功能就足够使用了。这种情况下，使用性能更高、成本更低的非关系型数据库当然是更明智的选择。</li></ul><p>了解关系型数据库和非关系型数据库的区别后，需要有一点的取舍，比较复杂和大型的项目不建议使用非关系型数据库，但是如果你想作个博客，CMS系统这类业务逻辑不复杂的程序，MongoDB是完全可以胜任的。</p><h2 id="MongoDB简介"><a href="#MongoDB简介" class="headerlink" title="MongoDB简介"></a>MongoDB简介</h2><blockquote><p>MongoDB是一个基于分布式文件存储的数据库，由C++语言编写。目的是为WEB应用提供扩展的高性能的数据存储解决方案。MongoDB是一个介于关系型数据库和非关系型数据库之间的产品，是非关系型数据库当中功能最丰富，最像关系数据库的。他支持的数据结构非常松散，是类似json的bson格式，因此可以存储比较复杂的数据类型。Mongo最大的特点是他支持的查询语言非常强大，其语法有点类似于面向对象的查询语言，几乎可以实现类似关系数据库单表查询的绝大部分功能，而且还支持对数据建立索引。</p></blockquote><h2 id="安装MongoDB"><a href="#安装MongoDB" class="headerlink" title="安装MongoDB"></a>安装MongoDB</h2><p>MongoDB的安装分为Windows下的安装和Mac的安装（Liunx和Mac趋同）。</p><h3 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h3><p>1.去官网下载MongoDB，<a href="https://www.mongodb.com/" target="_blank" rel="noopener">https://www.mongodb.com/</a> , 在网站中找到Download按钮。<br>2.下载后进行安装，安装没什么难度，但是对于新手建议选择默认安装，而不选择自己配置。等我们完全熟悉后再定制式配置。<br>3.安装时如果有安全软件，会报一些拦截，一律允许就好，不允许会安装失败的。<br>4.安装完成后，需要配置“环境变量”，目的是再命令行中直接使用，而不需要输入很长的路径了。</p><h2 id="运行MongoDB服务端"><a href="#运行MongoDB服务端" class="headerlink" title="运行MongoDB服务端"></a>运行MongoDB服务端</h2><p>安装好MongoDB数据库后，我们需要启用服务端才能使用。启用服务的命令是：Mongod。<br>1.打开命令行:先打开运行（快捷键win+R），然后输入cmd后回车，就可以打开命令行工具。<br>2.执行mongod:在命令中直接输入mongod，但是你会发现服务并没有启动，报了一个exception，服务停止了。<br>3.新建文件夹:出现上边的错误，是因为我们没有建立Mongodb需要的文件夹，一般是安装盘的根目录，建立data/db,这两个文件夹。<br>4.运行mongod：这时候服务就可以开启了，链接默认端口是27017。</p><h2 id="链接服务"><a href="#链接服务" class="headerlink" title="链接服务"></a>链接服务</h2><p>服务端开启后，我们可以使用命令行来链接服务端，链接命令是mongo。重新打开一个命令行工具，然后输入mongo命令。也许你在链接时会报几个warning（警告），我们先不用管它，以后我们再慢慢学习。<br>查看存在数据库命令：show dbs<br>查看数据库版本命令：db.version()<br>如果这两条命令都可以正常的显示出结果，证明我们的MongoDB数据库已经安装成功了。</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo 文章管理</title>
      <link href="/categories/blog/83dcefb7.html"/>
      <url>/categories/blog/83dcefb7.html</url>
      
        <content type="html"><![CDATA[<h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><h3 id="全局安装-hexo-命令库"><a href="#全局安装-hexo-命令库" class="headerlink" title="全局安装 hexo 命令库"></a>全局安装 hexo 命令库</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-cli -g</code></pre><h3 id="创建一个博客项目（一般只在首次创建，后续操作从第三步开始即可）"><a href="#创建一个博客项目（一般只在首次创建，后续操作从第三步开始即可）" class="headerlink" title="创建一个博客项目（一般只在首次创建，后续操作从第三步开始即可）"></a>创建一个博客项目（一般只在首次创建，后续操作从第三步开始即可）</h3><pre class=" language-bash"><code class="language-bash">hexo init blog</code></pre><h3 id="进入博客项目"><a href="#进入博客项目" class="headerlink" title="进入博客项目"></a>进入博客项目</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">cd</span> blog</code></pre><h3 id="新建-amp-编辑文章"><a href="#新建-amp-编辑文章" class="headerlink" title="新建&amp;编辑文章"></a>新建&amp;编辑文章</h3><p>命令行中输入以下指令以创建新文章：</p><pre class=" language-bash"><code class="language-bash">hexo new <span class="token string">"new article"</span></code></pre><blockquote><p>执行后在 source/_posts 中生成了一个 new-article.md 文件</p></blockquote><p>文件中的初始内容为：</p><pre class=" language-md"><code class="language-md">---title: new articledate: 2014-11-01 20:10:33tags:---</code></pre><p>使用三个 “-” 字符包裹着页面的属性，采用 yaml 格式书写<br>接着是正文，采用 markdown 格式书写</p><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><pre class=" language-bash"><code class="language-bash">hexo generate/g</code></pre><h3 id="本地服务预览"><a href="#本地服务预览" class="headerlink" title="本地服务预览"></a>本地服务预览</h3><p>命令行中输入以下指令启动本地服务器</p><pre class=" language-bash"><code class="language-bash">hexo server/s</code></pre><p>然后在浏览器窗口打开 localhost:4000</p><blockquote><p>注意：在新建、删除或修改文章之后，不需要重新启动服务器，只需刷新一下页面就能预览新的改动</p></blockquote><h3 id="发布到服务器上"><a href="#发布到服务器上" class="headerlink" title="发布到服务器上"></a>发布到服务器上</h3><p>命令行中输入以下指令</p><pre class=" language-bash"><code class="language-bash">hexo deploy/d</code></pre><blockquote><p>前提:必须在站点配置文件 _config.yml 中做以下配置：</p></blockquote><pre class=" language-yml"><code class="language-yml">deploy:  type: git  repository: git@github.com:用户名/仓库名.git  branch: master</code></pre><p>这里只会把根目录中的 public 整个文件夹发布到服务器，因为这里面才是所有工作的产出物——我们的博客静态文件。我们之前所有操作都是在为这个产出做准备工作。</p><h2 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h2><p>文章可以拥有如下属性：</p><table><thead><tr><th align="center">Setting</th><th align="center">Description</th><th align="center">Default</th></tr></thead><tbody><tr><td align="center">layout</td><td align="center">Layout</td><td align="center">post或page</td></tr><tr><td align="center">title</td><td align="center">文章的标题</td><td align="center"></td></tr><tr><td align="center">date</td><td align="center">文章的创建日期</td><td align="center">文章的创建日期</td></tr><tr><td align="center">updated</td><td align="center">文章的更新日期</td><td align="center">文章的更新日期</td></tr><tr><td align="center">comments</td><td align="center">是否开启评论</td><td align="center">true</td></tr><tr><td align="center">tags</td><td align="center">标签</td><td align="center"></td></tr><tr><td align="center">categories</td><td align="center">分类</td><td align="center"></td></tr><tr><td align="center">permalink</td><td align="center">url中的名字</td><td align="center">文件名</td></tr></tbody></table><h2 id="分类和标签的写法"><a href="#分类和标签的写法" class="headerlink" title="分类和标签的写法"></a>分类和标签的写法</h2><p>在正文之前的配置项中配置相应的文本即可</p><pre class=" language-md"><code class="language-md">categories:  - 日记tags:  - Hexo  - node.js# 或者写成数组的形式categories: 日记tags: [Hexo, node.js]</code></pre><h2 id="首页摘要"><a href="#首页摘要" class="headerlink" title="首页摘要"></a>首页摘要</h2><p>同 wordpress 一样，在正文中 之上的内容显示为摘要。</p><h2 id="layout"><a href="#layout" class="headerlink" title="layout"></a>layout</h2><p>如果你修改了 layout，在 scaffolds 文件夹里一定要有名字对应的模版文件，否则会采用默认模版。</p><h2 id="文件名"><a href="#文件名" class="headerlink" title="文件名"></a>文件名</h2><p>在配置文件中的 <code>new_post_name</code> 项可以设置文件名，默认为 <code>:title</code> ，也就是你在命令行输入的名字。<br>文件名可以为下面几个变量和字符串常量的任意组合：</p><table><thead><tr><th align="left">Variable</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left">:title</td><td align="left">Escaped title (lower case and replace spaces with dash)</td></tr><tr><td align="left">:year</td><td align="left">Created year (4-digit)</td></tr><tr><td align="left">:month</td><td align="left">Created month (2-digit)</td></tr><tr><td align="left">:i_month</td><td align="left">Created month (Without leading zeros)</td></tr><tr><td align="left">:day</td><td align="left">Created day (2-digit)</td></tr><tr><td align="left">:i_day</td><td align="left">Created day (Without leading zeros)</td></tr></tbody></table><h2 id="草稿"><a href="#草稿" class="headerlink" title="草稿"></a>草稿</h2><p>草稿相当于很多博客都有的 “私密文章” 功能。</p><pre class=" language-bash"><code class="language-bash">hexo new draft <span class="token string">"new draft"</span></code></pre><p>会在 source/_drafts 目录下生成一个 new-draft.md 文件。但是这个文件不被显示在页面上，链接也访问不到。也就是说如果你想把某一篇文章移除显示，又不舍得删除，可以把它移动到 _drafts 目录之中。<br>如果你希望强行预览草稿，更改配置文件：</p><pre class=" language-bash"><code class="language-bash">render_drafts: <span class="token boolean">true</span></code></pre><p>或者，如下方式启动server：</p><pre class=" language-bash"><code class="language-bash">hexo server --drafts</code></pre><p>下面这条命令可以把草稿变成文章，或者页面：</p><pre class=" language-bash"><code class="language-bash">hexo publish <span class="token punctuation">[</span>layout<span class="token punctuation">]</span> <span class="token operator">&lt;</span>filename<span class="token operator">></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flex-弹性布局</title>
      <link href="/categories/frontend/1ad5be0d.html"/>
      <url>/categories/frontend/1ad5be0d.html</url>
      
        <content type="html"><![CDATA[<h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><p>&emsp;&emsp;采用 Flex 布局的元素，称为 Flex 容器（flex container），简称”容器”。它的所有子元素自动成为容器成员，称为 Flex 项目（flex item），简称”项目”。<br>&emsp;&emsp;容器默认存在两根轴：水平的主轴（main axis）和垂直的交叉轴（cross axis）。主轴的开始位置（与边框的交叉点）叫做main start，结束位置叫做main end；交叉轴的开始位置叫做cross start，结束位置叫做cross end。<br>&emsp;&emsp;Flex项目默认沿主轴排列。单个项目占据的主轴空间叫做main size，占据的交叉轴空间叫做cross size。<br>&emsp;&emsp;Flex属性分为两部分，一部分作用于容器称容器属性，另一部分作用于项目称为项目属性。下面我们就分部的来介绍它们。</p><h2 id="Flex容器属性"><a href="#Flex容器属性" class="headerlink" title="Flex容器属性"></a>Flex容器属性</h2><h3 id="flex容器定义"><a href="#flex容器定义" class="headerlink" title="flex容器定义"></a>flex容器定义</h3><p>基本语法：</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span>  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">/* 或者 inline-flex */</span><span class="token punctuation">}</span></code></pre><p>&emsp;&emsp;上述写法，定义了一个flex容器，根据设值的不同可以是块状容器或内联容器。这使得直接子结点拥有了一个flex上下文。</p><h3 id="flex-direction"><a href="#flex-direction" class="headerlink" title="flex-direction"></a>flex-direction</h3><p>&emsp;&emsp;<code>flex-direction</code> 属性决定主轴的方向（即项目的排列方向）。<br>基本语法：</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span>    <span class="token property">flex-direction</span><span class="token punctuation">:</span> row | row-reverse | column | column-reverse<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><ul><li><code>row</code> 表示从左向右排列</li><li><code>row-reverse</code> 表示从右向左排列</li><li><code>column</code> 表示从上向下排列</li><li><code>column-reverse</code> 表示从下向上排列</li></ul><h3 id="flex-wrap"><a href="#flex-wrap" class="headerlink" title="flex-wrap"></a>flex-wrap</h3><p>&emsp;&emsp;缺省情况下，Flex项目都排在一条线（又称”轴线”）上。我们可以通过 <code>flex-wrap</code> 属性的设置，让Flex项目换行排列。<br>基本语法：</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span>    <span class="token property">flex-wrap</span><span class="token punctuation">:</span> nowrap | wrap | wrap-reverse<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><ul><li><code>nowrap</code> (缺省)：所有Flex项目单行排列</li><li><code>wrap</code> ：所有Flex项目多行排列，按从上到下的顺序</li><li><code>wrap-reverse</code> ：所有Flex项目多行排列，按从下到上的顺序</li></ul><h3 id="flex-flow"><a href="#flex-flow" class="headerlink" title="flex-flow"></a>flex-flow</h3><p>&emsp;&emsp;<code>flex-flow</code> 属性是 <code>flex-direction</code> 属性和 <code>flex-wrap</code> 属性的简写形式，默认值为 <code>row nowrap</code><br>基本语法：</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span>    <span class="token property">flex-flow</span><span class="token punctuation">:</span> &lt;‘flex-direction’> || &lt;‘flex-wrap’><span class="token punctuation">}</span></code></pre><h3 id="justify-content"><a href="#justify-content" class="headerlink" title="justify-content"></a>justify-content</h3><p>&emsp;&emsp;<code>justify-content</code> 属性定义了项目在主轴上的对齐方式及额外空间的分配方式。<br>基本语法：</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.box</span>  </span><span class="token punctuation">{</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> flex-start | flex-end | center | space-between | space-around | space-evenly<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><ul><li><code>flex-start</code> (缺省)：从启点线开始顺序排列</li><li><code>flex-end</code> ：相对终点线顺序排列</li><li><code>center</code> ：居中排列</li><li><code>space-between</code> ：项目均匀分布，第一项在启点线，最后一项在终点线</li><li><code>space-around</code> ：项目均匀分布，每一个项目两侧有相同的留白空间，相邻项目之间的距离是两个项目之间留白的和</li><li><code>space-evenly</code> ：项目均匀分布，所有项目之间及项目与边框之间距离相等</li></ul><h3 id="align-items"><a href="#align-items" class="headerlink" title="align-items"></a>align-items</h3><p>&emsp;&emsp;<code>align-items</code> 属性定义项目在交叉轴上的对齐方式。<br>基本语法：</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span>  <span class="token property">align-items</span><span class="token punctuation">:</span> stretch | flex-start | flex-end | center | baseline<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><ul><li><code>stretch</code> (缺省)：交叉轴方向拉伸显示</li><li><code>flex-start</code> ：项目按交叉轴起点线对齐</li><li><code>flex-end</code> ：项目按交叉轴终点线对齐</li><li><code>center</code> ：交叉轴方向项目中间对齐</li><li><code>baseline</code> ：交叉轴方向按第一行文字基线对齐</li></ul><h3 id="align-content"><a href="#align-content" class="headerlink" title="align-content"></a>align-content</h3><p>&emsp;&emsp;<code>align-content</code> 属性定义了在交叉轴方向的对齐方式及额外空间分配，类似于主轴上 <code>justify-content</code> 的作用。<br>基本语法：</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span>    <span class="token property">align-content</span><span class="token punctuation">:</span> stretch | flex-start | flex-end | center | space-between | space-around <span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><ul><li><code>stretch</code>  (缺省)：拉伸显示</li><li><code>flex-start</code> ：从启点线开始顺序排列</li><li><code>flex-end</code> ：相对终点线顺序排列</li><li><code>center</code> ：居中排列</li><li><code>space-between</code> ：项目均匀分布，第一项在启点线，最后一项在终点线</li><li><code>space-around</code> ：项目均匀分布，每一个项目两侧有相同的留白空间，相邻项目之间的距离是两个项目之间留白的和</li></ul><h2 id="Flex项目属性"><a href="#Flex项目属性" class="headerlink" title="Flex项目属性"></a>Flex项目属性</h2><h3 id="order"><a href="#order" class="headerlink" title="order"></a>order</h3><p>&emsp;&emsp;缺省情况下，Flex项目是按照在代码中出现的先后顺序排列的。然而 <code>order</code> 属性可以控制项目在容器中的先后顺序。<br>基本语法：</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.item</span> </span><span class="token punctuation">{</span>  <span class="token property">order</span><span class="token punctuation">:</span> &lt;integer><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">/* 缺省 0 */</span><span class="token punctuation">}</span></code></pre><p>&emsp;&emsp;按 <code>order</code> 值从小到大顺序排列，可以为负值，缺省为0。</p><h3 id="flex-grow"><a href="#flex-grow" class="headerlink" title="flex-grow"></a>flex-grow</h3><p>&emsp;&emsp;<code>flex-grow</code> 属性定义项目的放大比例，<code>flex-grow</code> 值是一个单位的正整数，表示放大的比例。默认为0，即如果存在额外空间，也不放大，负值无效。<br>如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。<br>基本语法：</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.item</span> </span><span class="token punctuation">{</span>  <span class="token property">flex-grow</span><span class="token punctuation">:</span> &lt;number><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">/* 缺省 0 */</span><span class="token punctuation">}</span></code></pre><h3 id="flex-shrink"><a href="#flex-shrink" class="headerlink" title="flex-shrink"></a>flex-shrink</h3><p>&emsp;&emsp;<code>flex-shrink</code> 属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。0表示不缩小，负值无效。<br>基本语法：</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.item</span> </span><span class="token punctuation">{</span>  <span class="token property">flex-shrink</span><span class="token punctuation">:</span> &lt;number><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">/* 缺省 1 */</span><span class="token punctuation">}</span></code></pre><h3 id="flex-basis"><a href="#flex-basis" class="headerlink" title="flex-basis"></a>flex-basis</h3><p>&emsp;&emsp;<code>flex-basis</code> 属性定义项目在分配额外空间之前的缺省尺寸。属性值可以是长度（20%，10rem等）或者关键字auto。它的默认值为 <code>auto</code> ，即项目的本来大小。<br>基本语法：</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.item</span> </span><span class="token punctuation">{</span>  <span class="token property">flex-basis</span><span class="token punctuation">:</span> &lt;length> | auto<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">/* 缺省 auto */</span><span class="token punctuation">}</span></code></pre><h3 id="flex"><a href="#flex" class="headerlink" title="flex"></a>flex</h3><p>&emsp;&emsp;<code>flex</code> 属性是 <code>flex-grow</code> , <code>flex-shrink</code> 和 <code>flex-basis</code> 的简写，默认值为0 1 auto。后两个是可选属性。<br>基本语法：</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.item</span> </span><span class="token punctuation">{</span>  <span class="token property">flex</span><span class="token punctuation">:</span> none | [ &lt;<span class="token string">'flex-grow'</span>> &lt;<span class="token string">'flex-shrink'</span>>? || &lt;<span class="token string">'flex-basis'</span>> ]<span class="token punctuation">}</span></code></pre><p>&emsp;&emsp;一般推荐使用这种简写的方式，而不是分别定义每一个属性。</p><h3 id="align-self"><a href="#align-self" class="headerlink" title="align-self"></a>align-self</h3><p>&emsp;&emsp;<code>align-self</code> 属性定义项目的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。<br>基本语法：</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.item</span> </span><span class="token punctuation">{</span>  <span class="token property">align-self</span><span class="token punctuation">:</span> auto | flex-start | flex-end | center | baseline | stretch<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>&emsp;&emsp;除了 <code>auto</code> 值以外，<code>align-self</code> 属性与容器的 <code>align-items</code> 属性基本一致。</p><h2 id="兼容性"><a href="#兼容性" class="headerlink" title="兼容性"></a>兼容性</h2><table><thead><tr><th align="center">Chrome</th><th align="center">Safari</th><th align="center">Firefox</th><th align="center">Opera</th><th align="center">IE</th><th align="center">Android</th><th align="center">iOS</th></tr></thead><tbody><tr><td align="center">21+</td><td align="center">6.1+</td><td align="center">22+</td><td align="center">12.1+</td><td align="center">11+</td><td align="center">4.4+</td><td align="center">7.1+</td></tr></tbody></table><p>&emsp;&emsp;Flexbox需要一些特定的前缀以支持大多数的浏览器。甚至还存在完全不同的属性名称或属性值。这就需要Autoprefixer或类似的CSS后处理器的辅助，具体内容请参考相关文档。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
